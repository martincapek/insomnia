_id: spc_1a8bd74f6fd1431f84272d7ce4c0a8fb
type: ApiSpec
parentId: wrk_20f93ebb28444641b88bf85c5a6f7fd7
modified: 1691052489989
created: 1691052466887
fileName: Noimos Portal API 1.0
contents: >
  {
    "openapi": "3.0.0",
    "paths": {
      "/v1/version": {
        "get": {
          "operationId": "VersionController_check",
          "parameters": [],
          "responses": { "200": { "description": "" } },
          "tags": ["Version"]
        }
      },
      "/health": {
        "get": {
          "operationId": "HealthController_check",
          "parameters": [],
          "responses": {
            "200": {
              "description": "The Health Check is successful",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": { "type": "string", "example": "ok" },
                      "info": {
                        "type": "object",
                        "example": { "database": { "status": "up" } },
                        "additionalProperties": {
                          "type": "object",
                          "properties": { "status": { "type": "string" } },
                          "additionalProperties": { "type": "string" }
                        },
                        "nullable": true
                      },
                      "error": {
                        "type": "object",
                        "example": {},
                        "additionalProperties": {
                          "type": "object",
                          "properties": { "status": { "type": "string" } },
                          "additionalProperties": { "type": "string" }
                        },
                        "nullable": true
                      },
                      "details": {
                        "type": "object",
                        "example": { "database": { "status": "up" } },
                        "additionalProperties": {
                          "type": "object",
                          "properties": { "status": { "type": "string" } },
                          "additionalProperties": { "type": "string" }
                        }
                      }
                    }
                  }
                }
              }
            },
            "503": {
              "description": "The Health Check is not successful",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": { "type": "string", "example": "error" },
                      "info": {
                        "type": "object",
                        "example": { "database": { "status": "up" } },
                        "additionalProperties": {
                          "type": "object",
                          "properties": { "status": { "type": "string" } },
                          "additionalProperties": { "type": "string" }
                        },
                        "nullable": true
                      },
                      "error": {
                        "type": "object",
                        "example": {
                          "redis": {
                            "status": "down",
                            "message": "Could not connect"
                          }
                        },
                        "additionalProperties": {
                          "type": "object",
                          "properties": { "status": { "type": "string" } },
                          "additionalProperties": { "type": "string" }
                        },
                        "nullable": true
                      },
                      "details": {
                        "type": "object",
                        "example": {
                          "database": { "status": "up" },
                          "redis": {
                            "status": "down",
                            "message": "Could not connect"
                          }
                        },
                        "additionalProperties": {
                          "type": "object",
                          "properties": { "status": { "type": "string" } },
                          "additionalProperties": { "type": "string" }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "tags": ["Health"]
        }
      },
      "/v1/mobile/cases": {
        "get": {
          "operationId": "CasesController_find",
          "parameters": [
            {
              "name": "Branch",
              "in": "header",
              "description": "The branch of the garage/insurance",
              "schema": { "type": "string" }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/NoicomCaseDto" }
                  }
                }
              }
            },
            "401": {
              "description": "You do not have permission for this action."
            },
            "500": {
              "description": "The server encountered an internal error or misconfiguration and was unable to complete this request."
            }
          },
          "tags": ["Noicom: Authenticated"],
          "security": [{ "Authorization": [] }]
        },
        "post": {
          "operationId": "CasesController_create",
          "parameters": [
            {
              "name": "Branch",
              "in": "header",
              "description": "The branch of the garage/insurance",
              "schema": { "type": "string" }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NoicomCreateCaseDto" }
              }
            }
          },
          "responses": {
            "201": {
              "description": "The record has been successfully created.",
              "content": {
                "application/json": {
                  "schema": { "$ref": "#/components/schemas/Case" }
                }
              }
            },
            "401": {
              "description": "You do not have permission for this action."
            },
            "500": {
              "description": "The server encountered an internal error or misconfiguration and was unable to complete this request."
            }
          },
          "tags": ["Noicom: Authenticated"],
          "security": [{ "Authorization": [] }]
        }
      },
      "/v1/mobile/cases/{id}": {
        "get": {
          "operationId": "CasesController_findById",
          "parameters": [
            {
              "name": "Branch",
              "in": "header",
              "description": "The branch of the garage/insurance",
              "schema": { "type": "string" }
            },
            {
              "name": "id",
              "required": true,
              "in": "path",
              "schema": { "type": "string" }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": { "$ref": "#/components/schemas/NoicomCaseDto" }
                }
              }
            },
            "401": {
              "description": "You do not have permission for this action."
            },
            "500": {
              "description": "The server encountered an internal error or misconfiguration and was unable to complete this request."
            }
          },
          "tags": ["Noicom: Authenticated"],
          "security": [{ "Authorization": [] }]
        },
        "patch": {
          "operationId": "CasesController_updateById",
          "parameters": [
            {
              "name": "Branch",
              "in": "header",
              "description": "The branch of the garage/insurance",
              "schema": { "type": "string" }
            },
            {
              "name": "id",
              "required": true,
              "in": "path",
              "schema": { "type": "string" }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NoicomUpdateCaseDto" }
              }
            }
          },
          "responses": {
            "200": {
              "description": "The record has been successfully updated.",
              "content": {
                "application/json": {
                  "schema": { "$ref": "#/components/schemas/Case" }
                }
              }
            },
            "401": {
              "description": "You do not have permission for this action."
            },
            "500": {
              "description": "The server encountered an internal error or misconfiguration and was unable to complete this request."
            }
          },
          "tags": ["Noicom: Authenticated"],
          "security": [{ "Authorization": [] }]
        },
        "delete": {
          "operationId": "CasesController_deleteById",
          "parameters": [
            {
              "name": "Branch",
              "in": "header",
              "description": "The branch of the garage/insurance",
              "schema": { "type": "string" }
            },
            {
              "name": "id",
              "required": true,
              "in": "path",
              "schema": { "type": "string" }
            }
          ],
          "responses": {
            "204": { "description": "The record has been successfully deleted." },
            "401": {
              "description": "You do not have permission for this action."
            },
            "500": {
              "description": "The server encountered an internal error or misconfiguration and was unable to complete this request."
            }
          },
          "tags": ["Noicom: Authenticated"],
          "security": [{ "Authorization": [] }]
        }
      },
      "/v1/anonymous/request": {
        "get": {
          "operationId": "AnonymousController_findRequestById",
          "parameters": [
            {
              "name": "information-request",
              "in": "header",
              "description": "ID of the shared case",
              "schema": { "type": "string" }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NoicomInformationRequest"
                  }
                }
              }
            },
            "401": { "description": "Non existing information request." },
            "500": {
              "description": "The server encountered an internal error or misconfiguration and was unable to complete this request."
            }
          },
          "tags": ["Noicom: Anonymous"]
        },
        "patch": {
          "operationId": "AnonymousController_updateRequest",
          "parameters": [
            {
              "name": "information-request",
              "in": "header",
              "description": "ID of the shared case",
              "schema": { "type": "string" }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoicomUpdateInformationRequestDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NoicomInformationRequest"
                  }
                }
              }
            },
            "401": { "description": "Non existing information request." },
            "500": {
              "description": "The server encountered an internal error or misconfiguration and was unable to complete this request."
            }
          },
          "tags": ["Noicom: Anonymous"]
        }
      },
      "/v1/anonymous/case": {
        "get": {
          "operationId": "AnonymousController_findCase",
          "parameters": [
            {
              "name": "information-request",
              "in": "header",
              "description": "ID of the shared case",
              "schema": { "type": "string" }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": { "$ref": "#/components/schemas/NoicomCaseDto" }
                }
              }
            },
            "401": { "description": "Non existing information request." },
            "500": {
              "description": "The server encountered an internal error or misconfiguration and was unable to complete this request."
            }
          },
          "tags": ["Noicom: Anonymous"]
        },
        "patch": {
          "operationId": "AnonymousController_updateCaseById",
          "parameters": [
            {
              "name": "information-request",
              "in": "header",
              "description": "ID of the shared case",
              "schema": { "type": "string" }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NoicomUpdateCaseDto" }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": { "$ref": "#/components/schemas/NoicomCaseDto" }
                }
              }
            },
            "401": { "description": "Non existing information request." },
            "500": {
              "description": "The server encountered an internal error or misconfiguration and was unable to complete this request."
            }
          },
          "tags": ["Noicom: Anonymous"]
        }
      },
      "/v1/anonymous/case/insuranceCompany": {
        "post": {
          "operationId": "AnonymousController_setInsuranceCompany",
          "parameters": [
            {
              "name": "information-request",
              "in": "header",
              "description": "ID of the shared case",
              "schema": { "type": "string" }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoicomSetInsurancePostDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": { "schema": { "type": "object" } }
              }
            },
            "401": { "description": "Non existing information request." },
            "500": {
              "description": "The server encountered an internal error or misconfiguration and was unable to complete this request."
            }
          },
          "tags": ["Noicom: Anonymous"]
        }
      },
      "/v1/anonymous/attachments/upload": {
        "post": {
          "operationId": "AnonymousController_uploadAttachments",
          "parameters": [
            {
              "name": "information-request",
              "in": "header",
              "description": "ID of the shared case",
              "schema": { "type": "string" }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoicomCreateAttachmentDto"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": { "$ref": "#/components/schemas/NoicomAttachmentDto" }
                }
              }
            },
            "401": { "description": "Non existing information request." },
            "500": {
              "description": "The server encountered an internal error or misconfiguration and was unable to complete this request."
            }
          },
          "tags": ["Noicom: Anonymous"]
        }
      },
      "/v1/anonymous/attachments": {
        "get": {
          "operationId": "AnonymousController_findAttachments",
          "parameters": [
            {
              "name": "information-request",
              "in": "header",
              "description": "ID of the shared case",
              "schema": { "type": "string" }
            },
            {
              "name": "labelId",
              "required": false,
              "in": "query",
              "schema": { "type": "string" }
            },
            {
              "name": "type",
              "required": false,
              "in": "query",
              "schema": { "type": "string" }
            },
            {
              "name": "content",
              "required": false,
              "in": "query",
              "schema": { "type": "string" }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/NoicomAttachmentDto"
                    }
                  }
                }
              }
            },
            "401": { "description": "Non existing information request." },
            "500": {
              "description": "The server encountered an internal error or misconfiguration and was unable to complete this request."
            }
          },
          "tags": ["Noicom: Anonymous"]
        }
      },
      "/v1/anonymous/attachments/{id}": {
        "get": {
          "operationId": "AnonymousController_getAttachmentById",
          "parameters": [
            {
              "name": "information-request",
              "in": "header",
              "description": "ID of the shared case",
              "schema": { "type": "string" }
            },
            {
              "name": "id",
              "required": true,
              "in": "path",
              "schema": { "type": "string" }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": { "$ref": "#/components/schemas/NoicomAttachmentDto" }
                }
              }
            },
            "401": { "description": "Non existing information request." },
            "500": {
              "description": "The server encountered an internal error or misconfiguration and was unable to complete this request."
            }
          },
          "tags": ["Noicom: Anonymous"]
        },
        "delete": {
          "operationId": "AnonymousController_deleteAttachmentsByIdInRequestScope",
          "parameters": [
            {
              "name": "information-request",
              "in": "header",
              "description": "ID of the shared case",
              "schema": { "type": "string" }
            },
            {
              "name": "id",
              "required": true,
              "in": "path",
              "schema": { "type": "string" }
            }
          ],
          "responses": {
            "204": {
              "description": "The attachment has been successfully deleted."
            },
            "401": { "description": "Non existing information request." },
            "500": {
              "description": "The server encountered an internal error or misconfiguration and was unable to complete this request."
            }
          },
          "tags": ["Noicom: Anonymous"]
        },
        "post": {
          "operationId": "AnonymousController_callModelWithAttachment",
          "parameters": [
            {
              "name": "information-request",
              "in": "header",
              "description": "ID of the shared case",
              "schema": { "type": "string" }
            },
            {
              "name": "id",
              "required": true,
              "in": "path",
              "schema": { "type": "string" }
            },
            {
              "name": "action",
              "required": true,
              "in": "query",
              "schema": {
                "enum": ["grey_card_data_extraction"],
                "type": "string"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": { "$ref": "#/components/schemas/NoicomModelDto" }
                }
              }
            },
            "401": { "description": "Non existing information request." },
            "500": {
              "description": "The server encountered an internal error or misconfiguration and was unable to complete this request."
            }
          },
          "tags": ["Noicom: Anonymous"]
        }
      },
      "/v1/anonymous/attachments/{id}/labels": {
        "get": {
          "operationId": "AnonymousController_findLabelsOfAttachments",
          "parameters": [
            {
              "name": "information-request",
              "in": "header",
              "description": "ID of the shared case",
              "schema": { "type": "string" }
            },
            {
              "name": "id",
              "required": true,
              "in": "path",
              "schema": { "type": "string" }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/AttachmentToLabel" }
                  }
                }
              }
            },
            "401": { "description": "Non existing information request." },
            "500": {
              "description": "The server encountered an internal error or misconfiguration and was unable to complete this request."
            }
          },
          "tags": ["Noicom: Anonymous"]
        }
      },
      "/v1/anonymous/labels": {
        "post": {
          "operationId": "AnonymousController_create",
          "parameters": [
            {
              "name": "information-request",
              "in": "header",
              "description": "ID of the shared case",
              "schema": { "type": "string" }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NoicomCreateLabelDto" }
              }
            }
          },
          "responses": {
            "201": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": { "$ref": "#/components/schemas/NoicomLabelDto" }
                }
              }
            },
            "401": { "description": "Non existing information request." },
            "500": {
              "description": "The server encountered an internal error or misconfiguration and was unable to complete this request."
            }
          },
          "tags": ["Noicom: Anonymous"]
        },
        "get": {
          "operationId": "AnonymousController_findLabels",
          "parameters": [
            {
              "name": "information-request",
              "in": "header",
              "description": "ID of the shared case",
              "schema": { "type": "string" }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/NoicomLabelDto" }
                  }
                }
              }
            },
            "401": { "description": "Non existing information request." },
            "500": {
              "description": "The server encountered an internal error or misconfiguration and was unable to complete this request."
            }
          },
          "tags": ["Noicom: Anonymous"]
        }
      },
      "/v1/anonymous/labels/{id}": {
        "get": {
          "operationId": "AnonymousController_getLabelById",
          "parameters": [
            {
              "name": "information-request",
              "in": "header",
              "description": "ID of the shared case",
              "schema": { "type": "string" }
            },
            {
              "name": "id",
              "required": true,
              "in": "path",
              "schema": { "type": "string" }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": { "$ref": "#/components/schemas/NoicomLabelDto" }
                }
              }
            },
            "401": { "description": "Non existing information request." },
            "500": {
              "description": "The server encountered an internal error or misconfiguration and was unable to complete this request."
            }
          },
          "tags": ["Noicom: Anonymous"]
        },
        "delete": {
          "operationId": "AnonymousController_deleteLabelById",
          "parameters": [
            {
              "name": "information-request",
              "in": "header",
              "description": "ID of the shared case",
              "schema": { "type": "string" }
            },
            {
              "name": "id",
              "required": true,
              "in": "path",
              "schema": { "type": "string" }
            }
          ],
          "responses": {
            "204": { "description": "The label has been successfully deleted." },
            "401": { "description": "Non existing information request." },
            "500": {
              "description": "The server encountered an internal error or misconfiguration and was unable to complete this request."
            }
          },
          "tags": ["Noicom: Anonymous"]
        }
      },
      "/v1/anonymous/attachments/{attachmentId}/labels/{labelId}": {
        "patch": {
          "operationId": "AnonymousController_createOrUpdateAttachmentToLabel",
          "parameters": [
            {
              "name": "information-request",
              "in": "header",
              "description": "ID of the shared case",
              "schema": { "type": "string" }
            },
            {
              "name": "attachmentId",
              "required": true,
              "in": "path",
              "schema": { "type": "string" }
            },
            {
              "name": "labelId",
              "required": true,
              "in": "path",
              "schema": { "type": "string" }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoicomCreateAttachmentToLabelDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": { "$ref": "#/components/schemas/AttachmentToLabel" }
                }
              }
            },
            "401": { "description": "Non existing information request." },
            "500": {
              "description": "The server encountered an internal error or misconfiguration and was unable to complete this request."
            }
          },
          "tags": ["Noicom: Anonymous"]
        },
        "delete": {
          "operationId": "AnonymousController_deleteAttachmentToLabelsByAttachmentAndLabelId",
          "parameters": [
            {
              "name": "information-request",
              "in": "header",
              "description": "ID of the shared case",
              "schema": { "type": "string" }
            },
            {
              "name": "attachmentId",
              "required": true,
              "in": "path",
              "schema": { "type": "string" }
            },
            {
              "name": "labelId",
              "required": true,
              "in": "path",
              "schema": { "type": "string" }
            }
          ],
          "responses": {
            "204": {
              "description": "The attachmentToLabel has been successfully deleted."
            },
            "401": { "description": "Non existing information request." },
            "500": {
              "description": "The server encountered an internal error or misconfiguration and was unable to complete this request."
            }
          },
          "tags": ["Noicom: Anonymous"]
        }
      },
      "/v1/anonymous/share": {
        "post": {
          "operationId": "AnonymousController_shareBySmsOrEmail",
          "parameters": [
            {
              "name": "information-request",
              "in": "header",
              "description": "ID of the shared case",
              "schema": { "type": "string" }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoicomRequestShareDataDto"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "",
              "content": {
                "application/json": { "schema": { "type": "boolean" } }
              }
            },
            "401": { "description": "Non existing information request." },
            "500": {
              "description": "The server encountered an internal error or misconfiguration and was unable to complete this request."
            }
          },
          "tags": ["Noicom: Anonymous"]
        }
      },
      "/v1/anonymous/submit": {
        "patch": {
          "operationId": "AnonymousController_submitRequest",
          "parameters": [
            {
              "name": "information-request",
              "in": "header",
              "description": "ID of the shared case",
              "schema": { "type": "string" }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NoicomCaseSubmitDto" }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NoicomInformationRequest"
                  }
                }
              }
            },
            "401": { "description": "Non existing information request." },
            "500": {
              "description": "The server encountered an internal error or misconfiguration and was unable to complete this request."
            }
          },
          "tags": ["Noicom: Anonymous"]
        }
      },
      "/v1/mobile/users/me": {
        "get": {
          "operationId": "UsersController_getAuthUser",
          "parameters": [],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": { "$ref": "#/components/schemas/UserDto" }
                }
              }
            }
          },
          "tags": ["Noicom: Authenticated"],
          "security": [{ "Authorization": [] }]
        }
      },
      "/v1/mobile/insurances": {
        "get": {
          "operationId": "InsurancesController_getInsurances",
          "parameters": [
            {
              "name": "country",
              "required": true,
              "in": "query",
              "schema": { "enum": ["CH", "FR"], "type": "string" }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/NoicomInsuranceGetDto"
                    }
                  }
                }
              }
            }
          },
          "tags": ["Noicom: Authenticated"],
          "security": [{ "Authorization": [] }]
        }
      },
      "/v1/portal/garage/cases/{caseId}/quotations": {
        "post": {
          "operationId": "QuotationsController_createQuotation",
          "parameters": [
            {
              "name": "Branch",
              "in": "header",
              "description": "The branch of the garage/insurance",
              "schema": { "type": "string" }
            },
            {
              "name": "caseId",
              "required": true,
              "in": "path",
              "schema": { "type": "string" }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GarageCreateQuotationDto"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": { "$ref": "#/components/schemas/GarageQuotationDto" }
                }
              }
            },
            "401": {
              "description": "You do not have permission for this action."
            },
            "500": {
              "description": "The server encountered an internal error or misconfiguration and was unable to complete this request."
            }
          },
          "tags": ["Noiportal: Garages"],
          "security": [{ "Authorization": [] }]
        }
      },
      "/v1/portal/garage/cases/{caseId}/quotations/{id}": {
        "get": {
          "operationId": "QuotationsController_findById",
          "parameters": [
            {
              "name": "Branch",
              "in": "header",
              "description": "The branch of the garage/insurance",
              "schema": { "type": "string" }
            },
            {
              "name": "id",
              "required": true,
              "in": "path",
              "schema": { "type": "string" }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": { "$ref": "#/components/schemas/GarageQuotationDto" }
                }
              }
            },
            "401": {
              "description": "You do not have permission for this action."
            },
            "500": {
              "description": "The server encountered an internal error or misconfiguration and was unable to complete this request."
            }
          },
          "tags": ["Noiportal: Garages"],
          "security": [{ "Authorization": [] }]
        }
      },
      "/v1/portal/garage/cases": {
        "get": {
          "operationId": "CasesController_find",
          "parameters": [
            {
              "name": "Branch",
              "in": "header",
              "description": "The branch of the garage/insurance",
              "schema": { "type": "string" }
            },
            {
              "name": "type",
              "required": false,
              "in": "query",
              "schema": { "$ref": "#/components/schemas/CaseType" }
            },
            {
              "name": "referenceNumber_like",
              "required": false,
              "in": "query",
              "schema": { "type": "string" }
            },
            {
              "name": "licensePlate_like",
              "required": false,
              "in": "query",
              "schema": { "type": "string" }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/GarageCaseDto" }
                  }
                }
              }
            },
            "401": {
              "description": "You do not have permission for this action."
            },
            "500": {
              "description": "The server encountered an internal error or misconfiguration and was unable to complete this request."
            }
          },
          "tags": ["Noiportal: Garages"],
          "security": [{ "Authorization": [] }]
        },
        "post": {
          "operationId": "CasesController_create",
          "parameters": [
            {
              "name": "Branch",
              "in": "header",
              "description": "The branch of the garage/insurance",
              "schema": { "type": "string" }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GarageCreateCaseDto" }
              }
            }
          },
          "responses": {
            "201": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": { "$ref": "#/components/schemas/GarageCaseDto" }
                }
              }
            },
            "401": {
              "description": "You do not have permission for this action."
            },
            "500": {
              "description": "The server encountered an internal error or misconfiguration and was unable to complete this request."
            }
          },
          "tags": ["Noiportal: Garages"],
          "security": [{ "Authorization": [] }]
        }
      },
      "/v1/portal/garage/cases/{id}": {
        "get": {
          "operationId": "CasesController_findById",
          "parameters": [
            {
              "name": "Branch",
              "in": "header",
              "description": "The branch of the garage/insurance",
              "schema": { "type": "string" }
            },
            {
              "name": "id",
              "required": true,
              "in": "path",
              "schema": { "type": "string" }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": { "$ref": "#/components/schemas/GarageCaseDto" }
                }
              }
            },
            "401": {
              "description": "You do not have permission for this action."
            },
            "500": {
              "description": "The server encountered an internal error or misconfiguration and was unable to complete this request."
            }
          },
          "tags": ["Noiportal: Garages"],
          "security": [{ "Authorization": [] }]
        },
        "patch": {
          "operationId": "CasesController_updateById",
          "parameters": [
            {
              "name": "Branch",
              "in": "header",
              "description": "The branch of the garage/insurance",
              "schema": { "type": "string" }
            },
            {
              "name": "id",
              "required": true,
              "in": "path",
              "schema": { "type": "string" }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GarageUpdateCaseDto" }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": { "$ref": "#/components/schemas/GarageCaseDto" }
                }
              }
            },
            "401": {
              "description": "You do not have permission for this action."
            },
            "500": {
              "description": "The server encountered an internal error or misconfiguration and was unable to complete this request."
            }
          },
          "tags": ["Noiportal: Garages"],
          "security": [{ "Authorization": [] }]
        }
      },
      "/v1/portal/garage/models/greycard/extraction": {
        "post": {
          "operationId": "ModelsController_extractGreyCardData",
          "parameters": [
            {
              "name": "greycard",
              "required": true,
              "in": "path",
              "schema": { "type": "file" }
            }
          ],
          "responses": {
            "201": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GarageGreyCardDataExtractionResponseDto"
                  }
                }
              }
            }
          },
          "tags": ["Noiportal: Garages"]
        }
      },
      "/v1/portal/garage/cases/{caseId}/requests/{requestId}/attachments/{attachmentId}": {
        "post": {
          "operationId": "ModelsController_callModelWithAttachment",
          "parameters": [
            {
              "name": "attachmentId",
              "required": true,
              "in": "path",
              "schema": { "type": "string" }
            },
            {
              "name": "action",
              "required": true,
              "in": "query",
              "schema": {
                "enum": ["grey_card_data_extraction"],
                "type": "string"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": { "$ref": "#/components/schemas/NoicomModelDto" }
                }
              }
            }
          },
          "tags": ["Noiportal: Garages"]
        }
      },
      "/v1/portal/garage/cases/{caseId}/requests/{requestId}/attachments": {
        "post": {
          "operationId": "AttachmentsController_create",
          "parameters": [
            {
              "name": "Branch",
              "in": "header",
              "description": "The branch of the garage/insurance",
              "schema": { "type": "string" }
            },
            {
              "name": "requestId",
              "required": true,
              "in": "path",
              "schema": { "type": "string" }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GarageCreateAttachmentDto"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": { "$ref": "#/components/schemas/GarageAttachmentDto" }
                }
              }
            },
            "401": {
              "description": "You do not have permission for this action."
            },
            "500": {
              "description": "The server encountered an internal error or misconfiguration and was unable to complete this request."
            }
          },
          "tags": ["Noiportal: Garages"],
          "security": [{ "Authorization": [] }]
        },
        "get": {
          "operationId": "AttachmentsController_find",
          "parameters": [
            {
              "name": "Branch",
              "in": "header",
              "description": "The branch of the garage/insurance",
              "schema": { "type": "string" }
            },
            {
              "name": "requestId",
              "required": true,
              "in": "path",
              "schema": { "type": "string" }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/GarageAttachmentDto"
                    }
                  }
                }
              }
            },
            "401": {
              "description": "You do not have permission for this action."
            },
            "500": {
              "description": "The server encountered an internal error or misconfiguration and was unable to complete this request."
            }
          },
          "tags": ["Noiportal: Garages"],
          "security": [{ "Authorization": [] }]
        }
      },
      "/v1/portal/garage/cases/{caseId}/requests/{requestId}/attachments/downloadAll": {
        "get": {
          "operationId": "AttachmentsController_downloadAll",
          "parameters": [
            {
              "name": "Branch",
              "in": "header",
              "description": "The branch of the garage/insurance",
              "schema": { "type": "string" }
            }
          ],
          "responses": {
            "200": { "description": "" },
            "401": {
              "description": "You do not have permission for this action."
            },
            "500": {
              "description": "The server encountered an internal error or misconfiguration and was unable to complete this request."
            }
          },
          "tags": ["Noiportal: Garages"],
          "security": [{ "Authorization": [] }]
        }
      },
      "/v1/portal/garage/cases/{caseId}/requests/{requestId}/attachments/{id}": {
        "get": {
          "operationId": "AttachmentsController_findById",
          "parameters": [
            {
              "name": "Branch",
              "in": "header",
              "description": "The branch of the garage/insurance",
              "schema": { "type": "string" }
            },
            {
              "name": "id",
              "required": true,
              "in": "path",
              "schema": { "type": "string" }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": { "$ref": "#/components/schemas/GarageAttachmentDto" }
                }
              }
            },
            "401": {
              "description": "You do not have permission for this action."
            },
            "500": {
              "description": "The server encountered an internal error or misconfiguration and was unable to complete this request."
            }
          },
          "tags": ["Noiportal: Garages"],
          "security": [{ "Authorization": [] }]
        },
        "delete": {
          "operationId": "AttachmentsController_deleteById",
          "parameters": [
            {
              "name": "Branch",
              "in": "header",
              "description": "The branch of the garage/insurance",
              "schema": { "type": "string" }
            },
            {
              "name": "id",
              "required": true,
              "in": "path",
              "schema": { "type": "string" }
            }
          ],
          "responses": {
            "204": {
              "description": "The attachment has been successfully deleted."
            },
            "401": {
              "description": "You do not have permission for this action."
            },
            "500": {
              "description": "The server encountered an internal error or misconfiguration and was unable to complete this request."
            }
          },
          "tags": ["Noiportal: Garages"],
          "security": [{ "Authorization": [] }]
        }
      },
      "/v1/portal/garage/cases/{caseId}/requests/{requestId}/attachments/{attachmentId}/labels": {
        "get": {
          "operationId": "AttachmentsController_getAllLabels",
          "parameters": [
            {
              "name": "Branch",
              "in": "header",
              "description": "The branch of the garage/insurance",
              "schema": { "type": "string" }
            },
            {
              "name": "attachmentId",
              "required": true,
              "in": "path",
              "schema": { "type": "string" }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/GarageLabelDto" }
                  }
                }
              }
            },
            "401": {
              "description": "You do not have permission for this action."
            },
            "500": {
              "description": "The server encountered an internal error or misconfiguration and was unable to complete this request."
            }
          },
          "tags": ["Noiportal: Garages"],
          "security": [{ "Authorization": [] }]
        },
        "post": {
          "operationId": "AttachmentsController_createLabel",
          "parameters": [
            {
              "name": "Branch",
              "in": "header",
              "description": "The branch of the garage/insurance",
              "schema": { "type": "string" }
            },
            {
              "name": "requestId",
              "required": true,
              "in": "path",
              "schema": { "type": "string" }
            },
            {
              "name": "attachmentId",
              "required": true,
              "in": "path",
              "schema": { "type": "string" }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GarageCreateLabelDto" }
              }
            }
          },
          "responses": {
            "201": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": { "$ref": "#/components/schemas/GarageLabelDto" }
                }
              }
            },
            "401": {
              "description": "You do not have permission for this action."
            },
            "500": {
              "description": "The server encountered an internal error or misconfiguration and was unable to complete this request."
            }
          },
          "tags": ["Noiportal: Garages"],
          "security": [{ "Authorization": [] }]
        },
        "delete": {
          "operationId": "AttachmentsController_deleteAllLabels",
          "parameters": [
            {
              "name": "Branch",
              "in": "header",
              "description": "The branch of the garage/insurance",
              "schema": { "type": "string" }
            },
            {
              "name": "attachmentId",
              "required": true,
              "in": "path",
              "schema": { "type": "string" }
            }
          ],
          "responses": {
            "204": {
              "description": "The attachment labels have been successfully deleted."
            },
            "401": {
              "description": "You do not have permission for this action."
            },
            "500": {
              "description": "The server encountered an internal error or misconfiguration and was unable to complete this request."
            }
          },
          "tags": ["Noiportal: Garages"],
          "security": [{ "Authorization": [] }]
        }
      },
      "/v1/portal/garage/cases/{caseId}/requests/{requestId}/attachments/{attachmentId}/labels/{labelId}": {
        "patch": {
          "operationId": "AttachmentsController_updateLabel",
          "parameters": [
            {
              "name": "Branch",
              "in": "header",
              "description": "The branch of the garage/insurance",
              "schema": { "type": "string" }
            },
            {
              "name": "attachmentId",
              "required": true,
              "in": "path",
              "schema": { "type": "string" }
            },
            {
              "name": "labelId",
              "required": true,
              "in": "path",
              "schema": { "type": "string" }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GarageUpdateLabelDto" }
              }
            }
          },
          "responses": {
            "201": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": { "$ref": "#/components/schemas/GarageLabelDto" }
                }
              }
            },
            "401": {
              "description": "You do not have permission for this action."
            },
            "500": {
              "description": "The server encountered an internal error or misconfiguration and was unable to complete this request."
            }
          },
          "tags": ["Noiportal: Garages"],
          "security": [{ "Authorization": [] }]
        }
      },
      "/v1/portal/garage/cases/{caseId}/requests/{id}": {
        "get": {
          "operationId": "RequestController_findById",
          "parameters": [
            {
              "name": "Branch",
              "in": "header",
              "description": "The branch of the garage/insurance",
              "schema": { "type": "string" }
            },
            {
              "name": "id",
              "required": true,
              "in": "path",
              "schema": { "type": "string" }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GarageInformationRequestDto"
                  }
                }
              }
            },
            "401": {
              "description": "You do not have permission for this action."
            },
            "500": {
              "description": "The server encountered an internal error or misconfiguration and was unable to complete this request."
            }
          },
          "tags": ["Noiportal: Garages"],
          "security": [{ "Authorization": [] }]
        },
        "patch": {
          "operationId": "RequestController_updateById",
          "parameters": [
            {
              "name": "Branch",
              "in": "header",
              "description": "The branch of the garage/insurance",
              "schema": { "type": "string" }
            },
            {
              "name": "id",
              "required": true,
              "in": "path",
              "schema": { "type": "string" }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GarageUpdateInformationRequestDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GarageInformationRequestDto"
                  }
                }
              }
            },
            "401": {
              "description": "You do not have permission for this action."
            },
            "500": {
              "description": "The server encountered an internal error or misconfiguration and was unable to complete this request."
            }
          },
          "tags": ["Noiportal: Garages"],
          "security": [{ "Authorization": [] }]
        }
      },
      "/v1/portal/garage/cases/{caseId}/requests/{id}/get-noicom-link": {
        "get": {
          "operationId": "RequestController_createAnonymousLink",
          "parameters": [
            {
              "name": "Branch",
              "in": "header",
              "description": "The branch of the garage/insurance",
              "schema": { "type": "string" }
            },
            {
              "name": "id",
              "required": true,
              "in": "path",
              "schema": { "type": "string" }
            }
          ],
          "responses": {
            "200": { "description": "" },
            "401": {
              "description": "You do not have permission for this action."
            },
            "500": {
              "description": "The server encountered an internal error or misconfiguration and was unable to complete this request."
            }
          },
          "tags": ["Noiportal: Garages"],
          "security": [{ "Authorization": [] }]
        }
      },
      "/v1/portal/garage/information-request-dashboard": {
        "get": {
          "operationId": "InformationRequestDashboardController_getAllInformationRequests",
          "parameters": [
            {
              "name": "Branch",
              "in": "header",
              "description": "The branch of the garage/insurance",
              "schema": { "type": "string" }
            },
            {
              "required": false,
              "name": "state",
              "in": "query",
              "schema": {
                "enum": [
                  "new",
                  "open_by_user",
                  "in_progress_noicom",
                  "in_progress_noiportal",
                  "photo_taking_finished",
                  "done",
                  "mixed_flow_selected",
                  "portal_only_flow_selected",
                  "in_progress"
                ],
                "type": "string"
              }
            },
            {
              "required": false,
              "name": "licensePlateSubstring",
              "in": "query",
              "schema": { "type": "string" }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/InformationRequestDashboardDto"
                    }
                  }
                }
              }
            },
            "401": {
              "description": "You do not have permission for this action."
            },
            "500": {
              "description": "The server encountered an internal error or misconfiguration and was unable to complete this request."
            }
          },
          "tags": ["Noiportal: Garages"],
          "security": [{ "Authorization": [] }]
        }
      },
      "/v1/portal/insurance/cases": {
        "post": {
          "operationId": "CasesController_create",
          "parameters": [
            {
              "name": "Branch",
              "in": "header",
              "description": "The branch of the garage/insurance",
              "schema": { "type": "string" }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InsuranceCreateCaseDto"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": { "$ref": "#/components/schemas/InsuranceCaseDto" }
                }
              }
            },
            "401": {
              "description": "You do not have permission for this action."
            },
            "500": {
              "description": "The server encountered an internal error or misconfiguration and was unable to complete this request."
            }
          },
          "tags": ["Noiportal: Insurances"],
          "security": [{ "Authorization": [] }]
        },
        "get": {
          "operationId": "CasesController_find",
          "parameters": [
            {
              "name": "Branch",
              "in": "header",
              "description": "The branch of the garage/insurance",
              "schema": { "type": "string" }
            },
            {
              "name": "referenceNumber_like",
              "required": false,
              "in": "query",
              "schema": { "type": "string" }
            },
            {
              "name": "licensePlate_like",
              "required": false,
              "in": "query",
              "schema": { "type": "string" }
            },
            {
              "name": "reviewed",
              "required": false,
              "in": "query",
              "schema": { "enum": ["true", "false"], "type": "string" }
            },
            {
              "name": "status",
              "required": false,
              "in": "query",
              "schema": { "$ref": "#/components/schemas/CaseStatus" }
            },
            {
              "name": "type",
              "required": true,
              "in": "query",
              "schema": { "$ref": "#/components/schemas/CaseType" }
            },
            {
              "name": "information_request_status",
              "required": true,
              "in": "query",
              "schema": {
                "$ref": "#/components/schemas/InformationRequestStatus"
              }
            },
            {
              "name": "created_by_me",
              "required": false,
              "in": "query",
              "schema": { "type": "boolean" }
            },
            {
              "name": "ref_id_like",
              "required": false,
              "in": "query",
              "schema": { "type": "string" }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/InsuranceCaseDto" }
                  }
                }
              }
            },
            "401": {
              "description": "You do not have permission for this action."
            },
            "500": {
              "description": "The server encountered an internal error or misconfiguration and was unable to complete this request."
            }
          },
          "tags": ["Noiportal: Insurances"],
          "security": [{ "Authorization": [] }]
        }
      },
      "/v1/portal/insurance/cases/{id}": {
        "get": {
          "operationId": "CasesController_findById",
          "parameters": [
            {
              "name": "Branch",
              "in": "header",
              "description": "The branch of the garage/insurance",
              "schema": { "type": "string" }
            },
            {
              "name": "id",
              "required": true,
              "in": "path",
              "schema": { "type": "string" }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": { "$ref": "#/components/schemas/InsuranceCaseDto" }
                }
              }
            },
            "401": {
              "description": "You do not have permission for this action."
            },
            "500": {
              "description": "The server encountered an internal error or misconfiguration and was unable to complete this request."
            }
          },
          "tags": ["Noiportal: Insurances"],
          "security": [{ "Authorization": [] }]
        },
        "patch": {
          "operationId": "CasesController_updateById",
          "parameters": [
            {
              "name": "Branch",
              "in": "header",
              "description": "The branch of the garage/insurance",
              "schema": { "type": "string" }
            },
            {
              "name": "id",
              "required": true,
              "in": "path",
              "schema": { "type": "string" }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InsuranceUpdateCaseDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": { "$ref": "#/components/schemas/InsuranceCaseDto" }
                }
              }
            },
            "401": {
              "description": "You do not have permission for this action."
            },
            "500": {
              "description": "The server encountered an internal error or misconfiguration and was unable to complete this request."
            }
          },
          "tags": ["Noiportal: Insurances"],
          "security": [{ "Authorization": [] }]
        }
      },
      "/v1/portal/insurance/cases/{caseId}/reviews": {
        "get": {
          "operationId": "ReviewController_getReviewByCaseId",
          "parameters": [
            {
              "name": "Branch",
              "in": "header",
              "description": "The branch of the garage/insurance",
              "schema": { "type": "string" }
            },
            {
              "name": "caseId",
              "required": true,
              "in": "path",
              "schema": { "type": "string" }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": { "$ref": "#/components/schemas/InsuranceReviewDto" }
                }
              }
            },
            "401": {
              "description": "You do not have permission for this action."
            },
            "500": {
              "description": "The server encountered an internal error or misconfiguration and was unable to complete this request."
            }
          },
          "tags": ["Noiportal: Insurances"],
          "security": [{ "Authorization": [] }]
        },
        "post": {
          "operationId": "ReviewController_createCaseReview",
          "parameters": [
            {
              "name": "Branch",
              "in": "header",
              "description": "The branch of the garage/insurance",
              "schema": { "type": "string" }
            },
            {
              "name": "caseId",
              "required": true,
              "in": "path",
              "schema": { "type": "string" }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InsuranceCreateOrUpdateReviewDto"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": { "$ref": "#/components/schemas/InsuranceReviewDto" }
                }
              }
            },
            "401": {
              "description": "You do not have permission for this action."
            },
            "500": {
              "description": "The server encountered an internal error or misconfiguration and was unable to complete this request."
            }
          },
          "tags": ["Noiportal: Insurances"],
          "security": [{ "Authorization": [] }]
        }
      },
      "/v1/portal/insurance/cases/{caseId}/reviews/{reviewId}": {
        "get": {
          "operationId": "ReviewController_getCaseReview",
          "parameters": [
            {
              "name": "Branch",
              "in": "header",
              "description": "The branch of the garage/insurance",
              "schema": { "type": "string" }
            },
            {
              "name": "reviewId",
              "required": true,
              "in": "path",
              "schema": { "type": "string" }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": { "$ref": "#/components/schemas/InsuranceReviewDto" }
                }
              }
            },
            "401": {
              "description": "You do not have permission for this action."
            },
            "500": {
              "description": "The server encountered an internal error or misconfiguration and was unable to complete this request."
            }
          },
          "tags": ["Noiportal: Insurances"],
          "security": [{ "Authorization": [] }]
        },
        "patch": {
          "operationId": "ReviewController_updateCaseReview",
          "parameters": [
            {
              "name": "Branch",
              "in": "header",
              "description": "The branch of the garage/insurance",
              "schema": { "type": "string" }
            },
            {
              "name": "reviewId",
              "required": true,
              "in": "path",
              "schema": { "type": "string" }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InsuranceCreateOrUpdateReviewDto"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": { "$ref": "#/components/schemas/InsuranceReviewDto" }
                }
              }
            },
            "401": {
              "description": "You do not have permission for this action."
            },
            "500": {
              "description": "The server encountered an internal error or misconfiguration and was unable to complete this request."
            }
          },
          "tags": ["Noiportal: Insurances"],
          "security": [{ "Authorization": [] }]
        }
      },
      "/v1/portal/insurance/cases/{caseId}/requests/{requestId}/attachments/downloadAll": {
        "get": {
          "operationId": "AttachmentsController_downloadAll",
          "parameters": [
            {
              "name": "Branch",
              "in": "header",
              "description": "The branch of the garage/insurance",
              "schema": { "type": "string" }
            }
          ],
          "responses": {
            "200": { "description": "" },
            "401": {
              "description": "You do not have permission for this action."
            },
            "500": {
              "description": "The server encountered an internal error or misconfiguration and was unable to complete this request."
            }
          },
          "tags": ["Noiportal: Insurances"],
          "security": [{ "Authorization": [] }]
        }
      },
      "/v1/portal/insurance/cases/{caseId}/requests/{requestId}/attachments/{id}": {
        "get": {
          "operationId": "AttachmentsController_findById",
          "parameters": [
            {
              "name": "Branch",
              "in": "header",
              "description": "The branch of the garage/insurance",
              "schema": { "type": "string" }
            },
            {
              "name": "id",
              "required": true,
              "in": "path",
              "schema": { "type": "string" }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/InsuranceAttachmentDto"
                  }
                }
              }
            },
            "401": {
              "description": "You do not have permission for this action."
            },
            "500": {
              "description": "The server encountered an internal error or misconfiguration and was unable to complete this request."
            }
          },
          "tags": ["Noiportal: Insurances"],
          "security": [{ "Authorization": [] }]
        }
      },
      "/v1/portal/insurance/cases/{caseId}/requests/{requestId}/attachments": {
        "get": {
          "operationId": "AttachmentsController_find",
          "parameters": [
            {
              "name": "Branch",
              "in": "header",
              "description": "The branch of the garage/insurance",
              "schema": { "type": "string" }
            },
            {
              "name": "labelId",
              "required": false,
              "in": "query",
              "schema": { "type": "string" }
            },
            {
              "name": "type",
              "required": false,
              "in": "query",
              "schema": { "type": "string" }
            },
            {
              "name": "content",
              "required": false,
              "in": "query",
              "schema": { "type": "string" }
            },
            {
              "name": "requestId",
              "required": true,
              "in": "path",
              "schema": { "type": "string" }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/InsuranceAttachmentDto"
                    }
                  }
                }
              }
            },
            "401": {
              "description": "You do not have permission for this action."
            },
            "500": {
              "description": "The server encountered an internal error or misconfiguration and was unable to complete this request."
            }
          },
          "tags": ["Noiportal: Insurances"],
          "security": [{ "Authorization": [] }]
        }
      },
      "/v1/portal/insurance/garages": {
        "get": {
          "operationId": "InsuranceGarageController_getAllGarages",
          "parameters": [],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/InsuranceGarageDto" }
                  }
                }
              }
            }
          },
          "tags": ["Noiportal: Insurances"]
        }
      },
      "/v1/portal/insurance/garages/{garageId}": {
        "get": {
          "operationId": "InsuranceGarageController_getGarage",
          "parameters": [
            {
              "name": "garageId",
              "required": true,
              "in": "path",
              "schema": { "type": "string" }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": { "$ref": "#/components/schemas/InsuranceGarageDto" }
                }
              }
            }
          },
          "tags": ["Noiportal: Insurances"]
        }
      },
      "/v1/portal/insurance/cases/{caseId}/quotations/{id}": {
        "get": {
          "operationId": "QuotationsController_findById",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "in": "path",
              "schema": { "type": "string" }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/InsuranceQuotationDto"
                  }
                }
              }
            }
          },
          "tags": ["Noiportal: Insurances"]
        }
      },
      "/v1/portal/insurance/email-templates": {
        "get": {
          "operationId": "EmailTemplateController_getTemplates",
          "parameters": [
            {
              "name": "Branch",
              "in": "header",
              "description": "The branch of the garage/insurance",
              "schema": { "type": "string" }
            },
            {
              "name": "type",
              "required": false,
              "in": "query",
              "schema": { "$ref": "#/components/schemas/IrMessageTemplateType" }
            }
          ],
          "responses": {
            "200": { "description": "" },
            "401": {
              "description": "You do not have permission for this action."
            },
            "500": {
              "description": "The server encountered an internal error or misconfiguration and was unable to complete this request."
            }
          },
          "tags": ["Noiportal: Insurances"],
          "security": [{ "Authorization": [] }]
        }
      },
      "/v1/portal/insurance/email-templates/{templateId}/preview": {
        "post": {
          "operationId": "EmailTemplateController_previewEmailFromTemplate",
          "parameters": [
            {
              "name": "Branch",
              "in": "header",
              "description": "The branch of the garage/insurance",
              "schema": { "type": "string" }
            },
            {
              "name": "templateId",
              "required": true,
              "in": "path",
              "schema": { "type": "string" }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InsurancePreviewEmailDto"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "",
              "content": {
                "application/json": { "schema": { "type": "object" } }
              }
            },
            "401": {
              "description": "You do not have permission for this action."
            },
            "500": {
              "description": "The server encountered an internal error or misconfiguration and was unable to complete this request."
            }
          },
          "tags": ["Noiportal: Insurances"],
          "security": [{ "Authorization": [] }]
        }
      },
      "/v1/portal/insurance/cases/{caseId}/information-requests/{informationRequestId}/email-resend": {
        "post": {
          "operationId": "EmailTemplateController_reSendEmailFromTemplate",
          "parameters": [
            {
              "name": "Branch",
              "in": "header",
              "description": "The branch of the garage/insurance",
              "schema": { "type": "string" }
            },
            {
              "name": "caseId",
              "required": true,
              "in": "path",
              "schema": { "type": "string" }
            },
            {
              "name": "informationRequestId",
              "required": true,
              "in": "path",
              "schema": { "type": "string" }
            }
          ],
          "responses": {
            "201": { "description": "" },
            "401": {
              "description": "You do not have permission for this action."
            },
            "500": {
              "description": "The server encountered an internal error or misconfiguration and was unable to complete this request."
            }
          },
          "tags": ["Noiportal: Insurances"],
          "security": [{ "Authorization": [] }]
        }
      },
      "/v1/portal/insurance/cases/{caseId}/information-requests/{informationRequestId}/email-send": {
        "post": {
          "operationId": "EmailTemplateController_sendEmailFromTemplate",
          "parameters": [
            {
              "name": "Branch",
              "in": "header",
              "description": "The branch of the garage/insurance",
              "schema": { "type": "string" }
            },
            {
              "name": "caseId",
              "required": true,
              "in": "path",
              "schema": { "type": "string" }
            },
            {
              "name": "informationRequestId",
              "required": true,
              "in": "path",
              "schema": { "type": "string" }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/InsuranceSendEmailDto" }
              }
            }
          },
          "responses": {
            "201": { "description": "" },
            "401": {
              "description": "You do not have permission for this action."
            },
            "500": {
              "description": "The server encountered an internal error or misconfiguration and was unable to complete this request."
            }
          },
          "tags": ["Noiportal: Insurances"],
          "security": [{ "Authorization": [] }]
        }
      },
      "/v1/portal/insurance/sms-templates/preview": {
        "post": {
          "operationId": "SmsTemplateController_previewSmsFromTemplate",
          "parameters": [
            {
              "name": "Branch",
              "in": "header",
              "description": "The branch of the garage/insurance",
              "schema": { "type": "string" }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InsurancePreviewSmsDto"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "",
              "content": {
                "application/json": { "schema": { "type": "string" } }
              }
            },
            "401": {
              "description": "You do not have permission for this action."
            },
            "500": {
              "description": "The server encountered an internal error or misconfiguration and was unable to complete this request."
            }
          },
          "tags": ["Noiportal: Insurances"],
          "security": [{ "Authorization": [] }]
        }
      },
      "/v1/portal/insurance/cases/{caseId}/information-requests/{informationRequestId}/sms-resend": {
        "post": {
          "operationId": "SmsTemplateController_reSendSmsFromTemplate",
          "parameters": [
            {
              "name": "Branch",
              "in": "header",
              "description": "The branch of the garage/insurance",
              "schema": { "type": "string" }
            },
            {
              "name": "caseId",
              "required": true,
              "in": "path",
              "schema": { "type": "string" }
            },
            {
              "name": "informationRequestId",
              "required": true,
              "in": "path",
              "schema": { "type": "string" }
            }
          ],
          "responses": {
            "201": { "description": "" },
            "401": {
              "description": "You do not have permission for this action."
            },
            "500": {
              "description": "The server encountered an internal error or misconfiguration and was unable to complete this request."
            }
          },
          "tags": ["Noiportal: Insurances"],
          "security": [{ "Authorization": [] }]
        }
      },
      "/v1/portal/insurance/cases/{caseId}/information-requests/{informationRequestId}/sms-send": {
        "post": {
          "operationId": "SmsTemplateController_sendSmsFromTemplate",
          "parameters": [
            {
              "name": "Branch",
              "in": "header",
              "description": "The branch of the garage/insurance",
              "schema": { "type": "string" }
            },
            {
              "name": "caseId",
              "required": true,
              "in": "path",
              "schema": { "type": "string" }
            },
            {
              "name": "informationRequestId",
              "required": true,
              "in": "path",
              "schema": { "type": "string" }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/InsuranceSendSmsDto" }
              }
            }
          },
          "responses": {
            "201": { "description": "" },
            "401": {
              "description": "You do not have permission for this action."
            },
            "500": {
              "description": "The server encountered an internal error or misconfiguration and was unable to complete this request."
            }
          },
          "tags": ["Noiportal: Insurances"],
          "security": [{ "Authorization": [] }]
        }
      },
      "/v1/portal/insurance/information-request/type/{type}": {
        "get": {
          "operationId": "InformationRequestController_find",
          "parameters": [
            {
              "name": "Branch",
              "in": "header",
              "description": "The branch of the garage/insurance",
              "schema": { "type": "string" }
            },
            {
              "name": "type",
              "required": true,
              "in": "path",
              "schema": { "type": "string" }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/InsuranceInformationRequestDto"
                    }
                  }
                }
              }
            },
            "401": {
              "description": "You do not have permission for this action."
            },
            "500": {
              "description": "The server encountered an internal error or misconfiguration and was unable to complete this request."
            }
          },
          "tags": ["Noiportal: Insurances"],
          "security": [{ "Authorization": [] }]
        }
      },
      "/v1/portal/insurance/information-request/{id}": {
        "get": {
          "operationId": "InformationRequestController_findOne",
          "parameters": [
            {
              "name": "Branch",
              "in": "header",
              "description": "The branch of the garage/insurance",
              "schema": { "type": "string" }
            },
            {
              "name": "id",
              "required": true,
              "in": "path",
              "schema": { "type": "string" }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/InsuranceInformationRequestDto"
                  }
                }
              }
            },
            "401": {
              "description": "You do not have permission for this action."
            },
            "500": {
              "description": "The server encountered an internal error or misconfiguration and was unable to complete this request."
            }
          },
          "tags": ["Noiportal: Insurances"],
          "security": [{ "Authorization": [] }]
        },
        "post": {
          "operationId": "InformationRequestController_extendValidityOfRequest",
          "parameters": [
            {
              "name": "Branch",
              "in": "header",
              "description": "The branch of the garage/insurance",
              "schema": { "type": "string" }
            },
            {
              "name": "id",
              "required": true,
              "in": "path",
              "schema": { "type": "string" }
            }
          ],
          "responses": {
            "201": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/InsuranceInformationRequestDto"
                  }
                }
              }
            },
            "401": {
              "description": "You do not have permission for this action."
            },
            "500": {
              "description": "The server encountered an internal error or misconfiguration and was unable to complete this request."
            }
          },
          "tags": ["Noiportal: Insurances"],
          "security": [{ "Authorization": [] }]
        }
      },
      "/v1/portal/insurance/information-request/{id}/labels": {
        "get": {
          "operationId": "InformationRequestController_getLabels",
          "parameters": [
            {
              "name": "Branch",
              "in": "header",
              "description": "The branch of the garage/insurance",
              "schema": { "type": "string" }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/AnonymousLabelDto" }
                  }
                }
              }
            },
            "401": {
              "description": "You do not have permission for this action."
            },
            "500": {
              "description": "The server encountered an internal error or misconfiguration and was unable to complete this request."
            }
          },
          "tags": ["Noiportal: Insurances"],
          "security": [{ "Authorization": [] }]
        }
      },
      "/v1/portal/insurance/axa-fr-sms-preview": {
        "post": {
          "operationId": "SmsTemplateController_previewSms",
          "parameters": [],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InsurancePreviewSmsInputsDto"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "",
              "content": {
                "application/json": { "schema": { "type": "object" } }
              }
            }
          },
          "tags": ["Noiportal: Insurances"]
        }
      },
      "/v1/portal/insurance/cases/{caseId}/information-requests/{informationRequestId}/axa-fr-sms-send": {
        "post": {
          "operationId": "SmsTemplateController_sendSms",
          "parameters": [
            {
              "name": "informationRequestId",
              "required": true,
              "in": "path",
              "schema": { "type": "string" }
            },
            {
              "name": "caseId",
              "required": true,
              "in": "path",
              "schema": { "type": "string" }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/InsuranceSmsInputsDto" }
              }
            }
          },
          "responses": { "201": { "description": "" } },
          "tags": ["Noiportal: Insurances"]
        }
      },
      "/v1/portal/insurance/information-request-dashboard": {
        "get": {
          "operationId": "InformationRequestDashboardController_getAllInformationRequests",
          "parameters": [
            {
              "name": "Branch",
              "in": "header",
              "description": "The branch of the garage/insurance",
              "schema": { "type": "string" }
            },
            {
              "required": false,
              "name": "state",
              "in": "query",
              "schema": {
                "enum": [
                  "new",
                  "open_by_user",
                  "in_progress_noicom",
                  "in_progress_noiportal",
                  "photo_taking_finished",
                  "done",
                  "mixed_flow_selected",
                  "portal_only_flow_selected",
                  "in_progress"
                ],
                "type": "string"
              }
            },
            {
              "required": false,
              "name": "licensePlateSubstring",
              "in": "query",
              "schema": { "type": "string" }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/InformationRequestDashboardDto"
                    }
                  }
                }
              }
            },
            "401": {
              "description": "You do not have permission for this action."
            },
            "500": {
              "description": "The server encountered an internal error or misconfiguration and was unable to complete this request."
            }
          },
          "tags": ["Noiportal: Insurances"],
          "security": [{ "Authorization": [] }]
        }
      },
      "/v1/portal/{tenantType}/requests/{requestId}": {
        "get": {
          "operationId": "AnonymousController_findRequestById",
          "parameters": [],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": { "schema": { "type": "object" } }
              }
            }
          },
          "tags": ["Noiportal: Anonymous"]
        },
        "patch": {
          "operationId": "AnonymousController_patchRequest",
          "parameters": [],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnonymousUpdateInformationRequestDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/AnonymousInformationRequestDto"
                  }
                }
              }
            }
          },
          "tags": ["Noiportal: Anonymous"]
        }
      },
      "/v1/portal/{tenantType}/cases/{caseId}/requests/{requestId}": {
        "get": {
          "operationId": "AnonymousController_findRequestById",
          "parameters": [],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": { "schema": { "type": "object" } }
              }
            }
          },
          "tags": ["Noiportal: Anonymous"]
        },
        "patch": {
          "operationId": "AnonymousController_patchRequest",
          "parameters": [],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnonymousUpdateInformationRequestDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/AnonymousInformationRequestDto"
                  }
                }
              }
            }
          },
          "tags": ["Noiportal: Anonymous"]
        }
      },
      "/v1/portal/{tenantType}/requests/{requestId}/auto-i-dat": {
        "get": {
          "operationId": "AnonymousController_getAutoIDatRepairType",
          "parameters": [],
          "responses": { "200": { "description": "" } },
          "tags": ["Noiportal: Anonymous"]
        }
      },
      "/v1/portal/{tenantType}/cases/{caseId}/requests/{requestId}/auto-i-dat": {
        "get": {
          "operationId": "AnonymousController_getAutoIDatRepairType",
          "parameters": [],
          "responses": { "200": { "description": "" } },
          "tags": ["Noiportal: Anonymous"]
        }
      },
      "/v1/portal/{tenantType}/requests/{requestId}/attachments": {
        "get": {
          "operationId": "AnonymousController_findAttachments",
          "parameters": [
            {
              "name": "labelId",
              "required": false,
              "in": "query",
              "schema": { "type": "string" }
            },
            {
              "name": "type",
              "required": false,
              "in": "query",
              "schema": { "type": "string" }
            },
            {
              "name": "content",
              "required": false,
              "in": "query",
              "schema": { "type": "string" }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/AnonymousAttachmentDto"
                    }
                  }
                }
              }
            }
          },
          "tags": ["Noiportal: Anonymous"]
        },
        "post": {
          "operationId": "AnonymousController_uploadAttachments",
          "parameters": [],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnonymousCreateAttachmentDto"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/AnonymousAttachmentDto"
                  }
                }
              }
            }
          },
          "tags": ["Noiportal: Anonymous"]
        }
      },
      "/v1/portal/{tenantType}/cases/{caseId}/requests/{requestId}/attachments": {
        "get": {
          "operationId": "AnonymousController_findAttachments",
          "parameters": [
            {
              "name": "labelId",
              "required": false,
              "in": "query",
              "schema": { "type": "string" }
            },
            {
              "name": "type",
              "required": false,
              "in": "query",
              "schema": { "type": "string" }
            },
            {
              "name": "content",
              "required": false,
              "in": "query",
              "schema": { "type": "string" }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/AnonymousAttachmentDto"
                    }
                  }
                }
              }
            }
          },
          "tags": ["Noiportal: Anonymous"]
        },
        "post": {
          "operationId": "AnonymousController_uploadAttachments",
          "parameters": [],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnonymousCreateAttachmentDto"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/AnonymousAttachmentDto"
                  }
                }
              }
            }
          },
          "tags": ["Noiportal: Anonymous"]
        }
      },
      "/v1/portal/{tenantType}/requests/{requestId}/attachments/{attachmentId}": {
        "delete": {
          "operationId": "AnonymousController_deleteAttachment",
          "parameters": [
            {
              "name": "attachmentId",
              "required": true,
              "in": "path",
              "schema": { "type": "string" }
            }
          ],
          "responses": {
            "204": {
              "description": "The attachment has been successfully deleted."
            }
          },
          "tags": ["Noiportal: Anonymous"]
        },
        "post": {
          "operationId": "AnonymousController_callModelWithAttachment",
          "parameters": [
            {
              "name": "attachmentId",
              "required": true,
              "in": "path",
              "schema": { "type": "string" }
            },
            {
              "name": "action",
              "required": true,
              "in": "query",
              "schema": {
                "enum": ["grey_card_data_extraction"],
                "type": "string"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": { "$ref": "#/components/schemas/NoicomModelDto" }
                }
              }
            }
          },
          "tags": ["Noiportal: Anonymous"]
        }
      },
      "/v1/portal/{tenantType}/cases/{caseId}/requests/{requestId}/attachments/{attachmentId}": {
        "delete": {
          "operationId": "AnonymousController_deleteAttachment",
          "parameters": [
            {
              "name": "attachmentId",
              "required": true,
              "in": "path",
              "schema": { "type": "string" }
            }
          ],
          "responses": {
            "204": {
              "description": "The attachment has been successfully deleted."
            }
          },
          "tags": ["Noiportal: Anonymous"]
        },
        "post": {
          "operationId": "AnonymousController_callModelWithAttachment",
          "parameters": [
            {
              "name": "attachmentId",
              "required": true,
              "in": "path",
              "schema": { "type": "string" }
            },
            {
              "name": "action",
              "required": true,
              "in": "query",
              "schema": {
                "enum": ["grey_card_data_extraction"],
                "type": "string"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": { "$ref": "#/components/schemas/NoicomModelDto" }
                }
              }
            }
          },
          "tags": ["Noiportal: Anonymous"]
        }
      },
      "/v1/portal/{tenantType}/requests/{requestId}/labels": {
        "get": {
          "operationId": "AnonymousController_findLabels",
          "parameters": [],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/AnonymousLabelDto" }
                  }
                }
              }
            }
          },
          "tags": ["Noiportal: Anonymous"]
        }
      },
      "/v1/portal/{tenantType}/cases/{caseId}/requests/{requestId}/labels": {
        "get": {
          "operationId": "AnonymousController_findLabels",
          "parameters": [],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/AnonymousLabelDto" }
                  }
                }
              }
            }
          },
          "tags": ["Noiportal: Anonymous"]
        }
      },
      "/v1/portal/{tenantType}/requests/{requestId}/submit": {
        "patch": {
          "operationId": "AnonymousController_submit",
          "parameters": [],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoiportalCaseSubmitDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/AnonymousInformationRequestDto"
                  }
                }
              }
            }
          },
          "tags": ["Noiportal: Anonymous"]
        }
      },
      "/v1/portal/{tenantType}/cases/{caseId}/requests/{requestId}/submit": {
        "patch": {
          "operationId": "AnonymousController_submit",
          "parameters": [],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoiportalCaseSubmitDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/AnonymousInformationRequestDto"
                  }
                }
              }
            }
          },
          "tags": ["Noiportal: Anonymous"]
        }
      },
      "/v1/portal/{tenantType}/requests/{requestId}/attachments/upload": {
        "post": {
          "operationId": "AnonymousController_uploadAttachments",
          "parameters": [],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnonymousCreateAttachmentDto"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/AnonymousAttachmentDto"
                  }
                }
              }
            }
          },
          "tags": ["Noiportal: Anonymous"]
        }
      },
      "/v1/portal/{tenantType}/cases/{caseId}/requests/{requestId}/attachments/upload": {
        "post": {
          "operationId": "AnonymousController_uploadAttachments",
          "parameters": [],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnonymousCreateAttachmentDto"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/AnonymousAttachmentDto"
                  }
                }
              }
            }
          },
          "tags": ["Noiportal: Anonymous"]
        }
      },
      "/v1/portal/{tenantType}/requests/{requestId}/attachments/{attachmentId}/labels": {
        "post": {
          "operationId": "AnonymousController_createLabel",
          "parameters": [
            {
              "name": "attachmentId",
              "required": true,
              "in": "path",
              "schema": { "type": "string" }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GarageCreateLabelDto" }
              }
            }
          },
          "responses": {
            "201": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/AnonymousAttachmentToLabelDto"
                  }
                }
              }
            }
          },
          "tags": ["Noiportal: Anonymous"]
        },
        "delete": {
          "operationId": "AnonymousController_deleteAllLabels",
          "parameters": [
            {
              "name": "attachmentId",
              "required": true,
              "in": "path",
              "schema": { "type": "string" }
            }
          ],
          "responses": {
            "204": {
              "description": "The attachment labels have been successfully deleted."
            }
          },
          "tags": ["Noiportal: Anonymous"]
        }
      },
      "/v1/portal/{tenantType}/cases/{caseId}/requests/{requestId}/attachments/{attachmentId}/labels": {
        "post": {
          "operationId": "AnonymousController_createLabel",
          "parameters": [
            {
              "name": "attachmentId",
              "required": true,
              "in": "path",
              "schema": { "type": "string" }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GarageCreateLabelDto" }
              }
            }
          },
          "responses": {
            "201": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/AnonymousAttachmentToLabelDto"
                  }
                }
              }
            }
          },
          "tags": ["Noiportal: Anonymous"]
        },
        "delete": {
          "operationId": "AnonymousController_deleteAllLabels",
          "parameters": [
            {
              "name": "attachmentId",
              "required": true,
              "in": "path",
              "schema": { "type": "string" }
            }
          ],
          "responses": {
            "204": {
              "description": "The attachment labels have been successfully deleted."
            }
          },
          "tags": ["Noiportal: Anonymous"]
        }
      },
      "/v1/portal/{tenantType}/requests/{requestId}/attachments/{attachmentId}/labels/{labelId}": {
        "patch": {
          "operationId": "AnonymousController_createOrUpdateAttachmentToLabel",
          "parameters": [
            {
              "name": "attachmentId",
              "required": true,
              "in": "path",
              "schema": { "type": "string" }
            },
            {
              "name": "labelId",
              "required": true,
              "in": "path",
              "schema": { "type": "string" }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GarageUpdateLabelDto" }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/AnonymousAttachmentToLabelDto"
                  }
                }
              }
            }
          },
          "tags": ["Noiportal: Anonymous"]
        }
      },
      "/v1/portal/{tenantType}/cases/{caseId}/requests/{requestId}/attachments/{attachmentId}/labels/{labelId}": {
        "patch": {
          "operationId": "AnonymousController_createOrUpdateAttachmentToLabel",
          "parameters": [
            {
              "name": "attachmentId",
              "required": true,
              "in": "path",
              "schema": { "type": "string" }
            },
            {
              "name": "labelId",
              "required": true,
              "in": "path",
              "schema": { "type": "string" }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GarageUpdateLabelDto" }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/AnonymousAttachmentToLabelDto"
                  }
                }
              }
            }
          },
          "tags": ["Noiportal: Anonymous"]
        }
      },
      "/v1/portal/{tenantType}/requests/{requestId}/axa-ch/quotations": {
        "post": {
          "operationId": "AnonymousController_getKVAForAxaCH",
          "parameters": [],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CreateQuotationDto" }
              }
            }
          },
          "responses": {
            "201": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/AnonymousQuotationDto"
                  }
                }
              }
            }
          },
          "tags": ["Noiportal: Anonymous"]
        }
      },
      "/v1/portal/{tenantType}/cases/{caseId}/requests/{requestId}/axa-ch/quotations": {
        "post": {
          "operationId": "AnonymousController_getKVAForAxaCH",
          "parameters": [],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CreateQuotationDto" }
              }
            }
          },
          "responses": {
            "201": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/AnonymousQuotationDto"
                  }
                }
              }
            }
          },
          "tags": ["Noiportal: Anonymous"]
        }
      },
      "/v1/portal/{tenantType}/requests/{requestId}/quotations/{quotationId}": {
        "get": {
          "operationId": "AnonymousController_getQuotation",
          "parameters": [
            {
              "name": "caseId",
              "required": true,
              "in": "path",
              "schema": { "type": "string" }
            },
            {
              "name": "quotationId",
              "required": true,
              "in": "path",
              "schema": { "type": "string" }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/AnonymousQuotationDto"
                  }
                }
              }
            }
          },
          "tags": ["Noiportal: Anonymous"]
        }
      },
      "/v1/portal/{tenantType}/cases/{caseId}/requests/{requestId}/quotations/{quotationId}": {
        "get": {
          "operationId": "AnonymousController_getQuotation",
          "parameters": [
            {
              "name": "caseId",
              "required": true,
              "in": "path",
              "schema": { "type": "string" }
            },
            {
              "name": "quotationId",
              "required": true,
              "in": "path",
              "schema": { "type": "string" }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/AnonymousQuotationDto"
                  }
                }
              }
            }
          },
          "tags": ["Noiportal: Anonymous"]
        }
      },
      "/v1/portal/{tenantType}/requests/{requestId}/axa-ch/get-garage-rates": {
        "get": {
          "operationId": "AnonymousController_getGarageRates",
          "parameters": [],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": { "schema": { "type": "object" } }
              }
            }
          },
          "tags": ["Noiportal: Anonymous"]
        }
      },
      "/v1/portal/{tenantType}/cases/{caseId}/requests/{requestId}/axa-ch/get-garage-rates": {
        "get": {
          "operationId": "AnonymousController_getGarageRates",
          "parameters": [],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": { "schema": { "type": "object" } }
              }
            }
          },
          "tags": ["Noiportal: Anonymous"]
        }
      },
      "/v1/portal/{tenantType}/requests/{requestId}/select-flow": {
        "post": {
          "operationId": "AnonymousController_selectFlow",
          "parameters": [],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SelectFlowDto" }
              }
            }
          },
          "responses": {
            "201": {
              "description": "",
              "content": {
                "application/json": { "schema": { "type": "boolean" } }
              }
            }
          },
          "tags": ["Noiportal: Anonymous"]
        }
      },
      "/v1/portal/{tenantType}/cases/{caseId}/requests/{requestId}/select-flow": {
        "post": {
          "operationId": "AnonymousController_selectFlow",
          "parameters": [],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SelectFlowDto" }
              }
            }
          },
          "responses": {
            "201": {
              "description": "",
              "content": {
                "application/json": { "schema": { "type": "boolean" } }
              }
            }
          },
          "tags": ["Noiportal: Anonymous"]
        }
      },
      "/v1/portal/anonymous/auto-i-dat/glassCase/requests/{requestId}/isLatestKvaReplace": {
        "get": {
          "operationId": "AnonymousAutoIDatController_findRequestById",
          "parameters": [],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": { "$ref": "#/components/schemas/AnonymousKvaTypeDto" }
                }
              }
            }
          },
          "tags": ["Noiportal: Anonymous"]
        }
      },
      "/v1/portal/garage/profile": {
        "get": {
          "operationId": "ProfileController_getProfile",
          "parameters": [],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": { "$ref": "#/components/schemas/ProfileDto" }
                }
              }
            },
            "401": { "description": "" },
            "500": { "description": "" }
          },
          "tags": ["Noiportal: Garages"],
          "security": [{ "Authorization": [] }]
        },
        "put": {
          "operationId": "ProfileController_updateProfile",
          "parameters": [],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UpdateProfileDto" }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": { "$ref": "#/components/schemas/ProfileDto" }
                }
              }
            },
            "401": { "description": "" },
            "500": { "description": "" }
          },
          "tags": ["Noiportal: Garages"],
          "security": [{ "Authorization": [] }]
        }
      },
      "/v1/portal/insurance/profile": {
        "get": {
          "operationId": "ProfileController_getProfile",
          "parameters": [],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": { "$ref": "#/components/schemas/ProfileDto" }
                }
              }
            },
            "401": { "description": "" },
            "500": { "description": "" }
          },
          "tags": ["Noiportal: Garages"],
          "security": [{ "Authorization": [] }]
        },
        "put": {
          "operationId": "ProfileController_updateProfile",
          "parameters": [],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UpdateProfileDto" }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": { "$ref": "#/components/schemas/ProfileDto" }
                }
              }
            },
            "401": { "description": "" },
            "500": { "description": "" }
          },
          "tags": ["Noiportal: Garages"],
          "security": [{ "Authorization": [] }]
        }
      },
      "/v1/notifications/glass-pipeline-output": {
        "post": {
          "operationId": "NotificationController_processGlassPipelineOutputAndHandlePubSub",
          "parameters": [],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/PubSubDto" }
              }
            }
          },
          "responses": { "201": { "description": "" } },
          "tags": ["Noiportal: Notifications PubSub"]
        }
      },
      "/v1/event-actions/total-loss-analytics": {
        "post": {
          "operationId": "TotalLossAnalyticsController_createTotalLossAnalytics",
          "parameters": [],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/PubSubDto" }
              }
            }
          },
          "responses": { "201": { "description": "" } },
          "tags": ["Noiportal: Total Loss Analytics PubSub"]
        }
      },
      "/noimotor-cost-estimator/{requestId}/quotations": {
        "post": {
          "operationId": "NoimotorCostEstimatorController_createQuotation",
          "parameters": [
            {
              "name": "Branch",
              "in": "header",
              "description": "The branch of the garage/insurance",
              "schema": { "type": "string" }
            },
            {
              "name": "requestId",
              "required": true,
              "in": "path",
              "schema": { "type": "string" }
            }
          ],
          "responses": {
            "201": {
              "description": "",
              "content": {
                "application/json": { "schema": { "type": "object" } }
              }
            },
            "401": {
              "description": "You do not have permission for this action."
            },
            "500": {
              "description": "The server encountered an internal error or misconfiguration and was unable to complete this request."
            }
          },
          "tags": ["Noiportal: Garages"],
          "security": [{ "Authorization": [] }]
        }
      },
      "/noimotor-cost-estimator/{requestId}/quotations/{quotationId}": {
        "get": {
          "operationId": "NoimotorCostEstimatorController_getQuotation",
          "parameters": [
            {
              "name": "Branch",
              "in": "header",
              "description": "The branch of the garage/insurance",
              "schema": { "type": "string" }
            },
            {
              "name": "quotationId",
              "required": true,
              "in": "path",
              "schema": { "type": "string" }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": { "schema": { "type": "object" } }
              }
            },
            "401": {
              "description": "You do not have permission for this action."
            },
            "500": {
              "description": "The server encountered an internal error or misconfiguration and was unable to complete this request."
            }
          },
          "tags": ["Noiportal: Garages"],
          "security": [{ "Authorization": [] }]
        }
      },
      "/noimotor-cost-estimator/{requestId}/quotations/{quotationId}/gt-motive-link": {
        "get": {
          "operationId": "NoimotorCostEstimatorController_getGtMotiveLink",
          "parameters": [
            {
              "name": "Branch",
              "in": "header",
              "description": "The branch of the garage/insurance",
              "schema": { "type": "string" }
            },
            {
              "name": "quotationId",
              "required": true,
              "in": "path",
              "schema": { "type": "string" }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": { "schema": { "type": "object" } }
              }
            },
            "401": {
              "description": "You do not have permission for this action."
            },
            "500": {
              "description": "The server encountered an internal error or misconfiguration and was unable to complete this request."
            }
          },
          "tags": ["Noiportal: Garages"],
          "security": [{ "Authorization": [] }]
        }
      }
    },
    "info": {
      "title": "Noimos Portal API",
      "description": "",
      "version": "1.0",
      "contact": {}
    },
    "tags": [],
    "servers": [],
    "components": {
      "securitySchemes": {
        "Authorization": {
          "scheme": "bearer",
          "bearerFormat": "JWT",
          "type": "http",
          "description": "Please login with username and password using GCP Identity Provider (Firebase). You should make sure that your user on GCP Identity has a corresponding user on our DB."
        },
        "Branch": {
          "type": "apiKey",
          "in": "header",
          "name": "Branch",
          "description": "All resources (outside the user related ones) require a branch context."
        }
      },
      "schemas": {
        "CaseType": {
          "type": "string",
          "enum": ["glassDamage", "generalDamage"]
        },
        "NoicomCaseDto": {
          "type": "object",
          "properties": {
            "id": { "type": "string" },
            "type": { "$ref": "#/components/schemas/CaseType" },
            "defaultInformationRequestId": { "type": "string" },
            "createdAt": { "format": "date-time", "type": "string" },
            "submittedAt": { "format": "date-time", "type": "string" }
          },
          "required": ["id", "type", "defaultInformationRequestId", "createdAt"]
        },
        "NoicomCreateCaseDto": {
          "type": "object",
          "properties": {
            "type": { "$ref": "#/components/schemas/CaseType" },
            "informationRequestType": {
              "type": "object",
              "enum": [
                "GaragePictureDocumentation",
                "GarageFullGlassDocumentation",
                "GarageFullDocumentationRequest",
                "GaragePictureDocumentationRequest",
                "AxaFranceEndUserDocumentation",
                "AutoidatPictureDocumentation",
                "AutoidatFullGlassDocumentation",
                "EndUserPictureDocumentationRequest",
                "ExpertPictureDocumentation",
                "C2CGaragePictureDocumentation",
                "C2CEndCustomerPictureDocumentation"
              ]
            }
          },
          "required": ["informationRequestType"]
        },
        "GarageMandate": {
          "type": "object",
          "properties": {
            "id": { "type": "string" },
            "user": { "$ref": "#/components/schemas/GarageUser" },
            "userId": { "type": "string" },
            "branch": { "$ref": "#/components/schemas/GarageBranch" },
            "branchId": { "type": "string" },
            "role": { "type": "object" }
          },
          "required": ["id", "user", "userId", "branch", "branchId", "role"]
        },
        "GarageUser": {
          "type": "object",
          "properties": {
            "id": { "type": "string" },
            "externalId": { "type": "string" },
            "firstName": { "type": "string" },
            "lastName": { "type": "string" },
            "email": { "type": "string" },
            "type": { "type": "object" },
            "cases": {
              "type": "array",
              "items": { "$ref": "#/components/schemas/Case" }
            },
            "garage": { "$ref": "#/components/schemas/Garage" },
            "mandates": {
              "type": "array",
              "items": { "$ref": "#/components/schemas/GarageMandate" }
            }
          },
          "required": [
            "id",
            "externalId",
            "firstName",
            "lastName",
            "email",
            "type",
            "cases",
            "garage",
            "mandates"
          ]
        },
        "Garage": {
          "type": "object",
          "properties": {
            "id": { "type": "string" },
            "name": { "type": "string" },
            "tenantId": { "type": "string" },
            "users": {
              "type": "array",
              "items": { "$ref": "#/components/schemas/GarageUser" }
            },
            "rootBranch": { "$ref": "#/components/schemas/GarageBranch" }
          },
          "required": ["id", "name", "tenantId", "users", "rootBranch"]
        },
        "Address": {
          "type": "object",
          "properties": {
            "street": { "type": "string" },
            "zip": { "type": "string" },
            "city": { "type": "string" },
            "country": { "type": "object" }
          },
          "required": ["street", "zip", "city", "country"]
        },
        "Rates": {
          "type": "object",
          "properties": {
            "generalRepair": { "type": "number" },
            "glassRepair": { "type": "number" },
            "painting": { "type": "number" },
            "currency": { "type": "object" },
            "labourDiscountPercentage": { "type": "number" },
            "materialDiscountPercentage": { "type": "number" },
            "materialDiscountValue": { "type": "number" },
            "labourDiscountValue": { "type": "number" },
            "smallPartsPercentage": { "type": "number" }
          }
        },
        "GarageBranch": {
          "type": "object",
          "properties": {
            "id": { "type": "string" },
            "name": { "type": "string" },
            "garage": { "$ref": "#/components/schemas/Garage" },
            "children": {
              "type": "array",
              "items": { "$ref": "#/components/schemas/GarageBranch" }
            },
            "parentId": { "type": "string" },
            "parent": { "$ref": "#/components/schemas/GarageBranch" },
            "mandates": {
              "type": "array",
              "items": { "$ref": "#/components/schemas/GarageMandate" }
            },
            "cases": {
              "type": "array",
              "items": { "$ref": "#/components/schemas/Case" }
            },
            "address": { "$ref": "#/components/schemas/Address" },
            "rates": { "$ref": "#/components/schemas/Rates" },
            "contactPerson": { "type": "string" },
            "phone": { "type": "string" }
          },
          "required": [
            "id",
            "name",
            "garage",
            "children",
            "mandates",
            "cases",
            "address",
            "rates",
            "contactPerson",
            "phone"
          ]
        },
        "MessageTemplateContent": {
          "type": "object",
          "properties": {
            "locale": { "type": "string", "enum": ["en", "de", "it", "fr"] },
            "messageTemplateId": { "type": "string" },
            "subject": { "type": "string" },
            "body": { "type": "string" },
            "messageTemplate": { "$ref": "#/components/schemas/MessageTemplate" },
            "createdAt": { "format": "date-time", "type": "string" },
            "updatedAt": { "format": "date-time", "type": "string" }
          },
          "required": [
            "locale",
            "messageTemplateId",
            "subject",
            "body",
            "messageTemplate",
            "createdAt",
            "updatedAt"
          ]
        },
        "MessageTemplate": {
          "type": "object",
          "properties": {
            "id": { "type": "string" },
            "type": { "type": "object" },
            "insurance": { "$ref": "#/components/schemas/Insurance" },
            "insuranceId": { "type": "string" },
            "contents": {
              "type": "array",
              "items": { "$ref": "#/components/schemas/MessageTemplateContent" }
            },
            "createdAt": { "format": "date-time", "type": "string" },
            "updatedAt": { "format": "date-time", "type": "string" },
            "deletedAt": { "format": "date-time", "type": "string" }
          },
          "required": [
            "id",
            "type",
            "insurance",
            "insuranceId",
            "contents",
            "createdAt",
            "updatedAt"
          ]
        },
        "InsuranceFeatureToggle": {
          "type": "object",
          "properties": {
            "id": { "type": "string" },
            "type": {
              "type": "string",
              "enum": [
                "summary-email",
                "summary-email-with-images",
                "summary-with-chance-to-repair-email"
              ]
            },
            "isActive": { "type": "boolean" },
            "insurance": { "$ref": "#/components/schemas/Insurance" }
          },
          "required": ["id", "type", "isActive", "insurance"]
        },
        "Insurance": {
          "type": "object",
          "properties": {
            "id": { "type": "string" },
            "tenantId": { "type": "string" },
            "logoUrl": { "type": "string" },
            "name": { "type": "string" },
            "users": {
              "type": "array",
              "items": { "$ref": "#/components/schemas/InsuranceUser" }
            },
            "rootBranch": { "$ref": "#/components/schemas/InsuranceBranch" },
            "rootBranchId": { "type": "string" },
            "messageTemplates": {
              "type": "array",
              "items": { "$ref": "#/components/schemas/MessageTemplate" }
            },
            "country": { "type": "object" },
            "featureToggles": {
              "type": "array",
              "items": { "$ref": "#/components/schemas/InsuranceFeatureToggle" }
            }
          },
          "required": [
            "id",
            "tenantId",
            "name",
            "users",
            "rootBranch",
            "rootBranchId",
            "messageTemplates",
            "country",
            "featureToggles"
          ]
        },
        "InsuranceUser": {
          "type": "object",
          "properties": {
            "id": { "type": "string" },
            "externalId": { "type": "string" },
            "firstName": { "type": "string" },
            "lastName": { "type": "string" },
            "email": { "type": "string" },
            "type": { "type": "object" },
            "cases": {
              "type": "array",
              "items": { "$ref": "#/components/schemas/Case" }
            },
            "insurance": { "$ref": "#/components/schemas/Insurance" },
            "insuranceId": { "type": "string" },
            "mandates": {
              "type": "array",
              "items": { "$ref": "#/components/schemas/InsuranceMandate" }
            }
          },
          "required": [
            "id",
            "externalId",
            "firstName",
            "lastName",
            "email",
            "type",
            "cases",
            "insurance",
            "insuranceId",
            "mandates"
          ]
        },
        "InsuranceMandate": {
          "type": "object",
          "properties": {
            "id": { "type": "string" },
            "user": { "$ref": "#/components/schemas/InsuranceUser" },
            "userId": { "type": "string" },
            "branch": { "$ref": "#/components/schemas/InsuranceBranch" },
            "branchId": { "type": "string" },
            "role": { "type": "object" }
          },
          "required": ["id", "user", "userId", "branch", "branchId", "role"]
        },
        "InsuranceBranch": {
          "type": "object",
          "properties": {
            "id": { "type": "string" },
            "name": { "type": "string" },
            "children": {
              "type": "array",
              "items": { "$ref": "#/components/schemas/InsuranceBranch" }
            },
            "parent": { "$ref": "#/components/schemas/InsuranceBranch" },
            "mandates": {
              "type": "array",
              "items": { "$ref": "#/components/schemas/InsuranceMandate" }
            },
            "cases": {
              "type": "array",
              "items": { "$ref": "#/components/schemas/Case" }
            }
          },
          "required": ["id", "name", "children", "mandates", "cases"]
        },
        "InsuranceReview": {
          "type": "object",
          "properties": {
            "id": { "type": "string" },
            "goodImageQuality": { "type": "boolean" },
            "labelsAccurate": { "type": "boolean" },
            "validCostEstimation": { "type": "boolean" },
            "repairActionAccurate": { "type": "boolean" },
            "validInvoiceRange": { "type": "boolean" },
            "case": { "$ref": "#/components/schemas/Case" },
            "caseId": { "type": "string" }
          },
          "required": [
            "id",
            "goodImageQuality",
            "labelsAccurate",
            "validCostEstimation",
            "repairActionAccurate",
            "validInvoiceRange",
            "case",
            "caseId"
          ]
        },
        "Quotation": {
          "type": "object",
          "properties": {
            "id": { "type": "string" },
            "provider": { "type": "object" },
            "type": { "type": "string" },
            "data": { "type": "object" },
            "caseId": { "type": "string" },
            "case": { "$ref": "#/components/schemas/Case" }
          },
          "required": ["id", "provider", "type", "data", "caseId", "case"]
        },
        "LabelData": {
          "type": "object",
          "properties": {
            "damageType": { "type": "string" },
            "color": { "type": "string" }
          },
          "required": ["damageType", "color"]
        },
        "Label": {
          "type": "object",
          "properties": {
            "id": { "type": "string" },
            "case": { "$ref": "#/components/schemas/Case" },
            "labelData": { "$ref": "#/components/schemas/LabelData" },
            "createdAt": { "format": "date-time", "type": "string" },
            "updatedAt": { "format": "date-time", "type": "string" },
            "deletedAt": { "format": "date-time", "type": "string" },
            "request": { "$ref": "#/components/schemas/InformationRequest" },
            "attachmentToLabels": {
              "type": "array",
              "items": { "$ref": "#/components/schemas/AttachmentToLabel" }
            }
          },
          "required": [
            "id",
            "case",
            "labelData",
            "createdAt",
            "updatedAt",
            "request",
            "attachmentToLabels"
          ]
        },
        "AttachmentToLabel": {
          "type": "object",
          "properties": {
            "id": { "type": "string" },
            "attachment": { "$ref": "#/components/schemas/Attachment" },
            "attachmentId": { "type": "string" },
            "label": { "$ref": "#/components/schemas/Label" },
            "labelId": { "type": "string" },
            "attachmentData": { "type": "object" }
          },
          "required": [
            "id",
            "attachment",
            "attachmentId",
            "label",
            "labelId",
            "attachmentData"
          ]
        },
        "ModelRequest": {
          "type": "object",
          "properties": {
            "id": { "type": "string" },
            "type": { "type": "string" },
            "name": { "type": "string" },
            "input": { "$ref": "#/components/schemas/Attachment" },
            "inputId": { "type": "string" },
            "output": { "$ref": "#/components/schemas/Attachment" },
            "outputId": { "type": "string" }
          },
          "required": ["id", "type"]
        },
        "Attachment": {
          "type": "object",
          "properties": {
            "id": { "type": "string" },
            "type": { "type": "string" },
            "content": { "type": "string" },
            "fileName": { "type": "string" },
            "requestId": { "type": "string" },
            "request": { "$ref": "#/components/schemas/InformationRequest" },
            "attachmentData": { "type": "object" },
            "attachmentToLabels": {
              "type": "array",
              "items": { "$ref": "#/components/schemas/AttachmentToLabel" }
            },
            "inputModelRequests": {
              "type": "array",
              "items": { "$ref": "#/components/schemas/ModelRequest" }
            },
            "outputModelRequests": {
              "type": "array",
              "items": { "$ref": "#/components/schemas/ModelRequest" }
            },
            "createdAt": { "format": "date-time", "type": "string" },
            "deletedAt": { "format": "date-time", "type": "string" }
          },
          "required": [
            "id",
            "type",
            "content",
            "fileName",
            "requestId",
            "request",
            "attachmentData",
            "attachmentToLabels",
            "inputModelRequests",
            "outputModelRequests",
            "createdAt"
          ]
        },
        "InformationRequestAccessInfoBit": {
          "type": "object",
          "properties": {
            "informationRequest": {
              "$ref": "#/components/schemas/InformationRequest"
            },
            "informationRequestId": { "type": "string" },
            "expiredPayload": {
              "type": "object",
              "properties": { "action": { "required": true, "type": "object" } }
            },
            "id": { "type": "string" },
            "type": { "type": "string" },
            "expirationDate": { "format": "date-time", "type": "string" },
            "createdAt": { "format": "date-time", "type": "string" },
            "deletedAt": {
              "format": "date-time",
              "type": "string",
              "nullable": true
            }
          },
          "required": [
            "informationRequest",
            "informationRequestId",
            "expiredPayload",
            "id",
            "type",
            "expirationDate",
            "createdAt",
            "deletedAt"
          ]
        },
        "TotalLossAnalytics": {
          "type": "object",
          "properties": {
            "id": { "type": "string" },
            "informationRequest": {
              "$ref": "#/components/schemas/InformationRequest"
            },
            "informationRequestId": { "type": "string" },
            "type": { "type": "string" },
            "createdAt": { "format": "date-time", "type": "string" },
            "updatedAt": { "format": "date-time", "type": "string" }
          },
          "required": [
            "id",
            "informationRequest",
            "informationRequestId",
            "type",
            "createdAt",
            "updatedAt"
          ]
        },
        "InformationRequest": {
          "type": "object",
          "properties": {
            "id": { "type": "string" },
            "case": { "$ref": "#/components/schemas/Case" },
            "caseId": { "type": "string" },
            "refId": { "type": "string" },
            "lastUsed": { "format": "date-time", "type": "string" },
            "type": { "type": "object" },
            "configuration": { "type": "object" },
            "noicomSubmittedAt": { "format": "date-time", "type": "string" },
            "noiportalSubmittedAt": { "format": "date-time", "type": "string" },
            "createdAt": { "format": "date-time", "type": "string" },
            "updatedAt": { "format": "date-time", "type": "string" },
            "validUntil": { "format": "date-time", "type": "string" },
            "attachments": {
              "type": "array",
              "items": { "$ref": "#/components/schemas/Attachment" }
            },
            "informationRequestAccessInfoBits": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/InformationRequestAccessInfoBit"
              }
            },
            "labels": {
              "type": "array",
              "items": { "$ref": "#/components/schemas/Label" }
            },
            "data": { "type": "object" },
            "documentationFormComment": { "type": "string" },
            "licensePlate": { "type": "string" },
            "make": { "type": "string" },
            "model": { "type": "string" },
            "modelVersion": { "type": "string" },
            "vin": { "type": "string" },
            "state": { "type": "object" },
            "totalLossAnalytics": {
              "type": "array",
              "items": { "$ref": "#/components/schemas/TotalLossAnalytics" }
            }
          },
          "required": [
            "id",
            "case",
            "caseId",
            "lastUsed",
            "type",
            "configuration",
            "noicomSubmittedAt",
            "noiportalSubmittedAt",
            "createdAt",
            "updatedAt",
            "validUntil",
            "attachments",
            "informationRequestAccessInfoBits",
            "labels",
            "state",
            "totalLossAnalytics"
          ]
        },
        "Kva": {
          "type": "object",
          "properties": {
            "id": { "type": "string" },
            "type": { "type": "object" },
            "case": { "$ref": "#/components/schemas/Case" },
            "caseId": { "type": "string" },
            "createdAt": { "format": "date-time", "type": "string" },
            "deletedAt": { "format": "date-time", "type": "string" }
          },
          "required": ["id", "type", "createdAt", "deletedAt"]
        },
        "ThirdPartyCase": {
          "type": "object",
          "properties": {
            "id": { "type": "number" },
            "externalId": { "type": "string" },
            "thirdParty": { "type": "object" },
            "analysisOutput": { "type": "object" },
            "case": { "$ref": "#/components/schemas/Case" }
          },
          "required": ["id", "externalId", "thirdParty", "analysisOutput", "case"]
        },
        "Case": {
          "type": "object",
          "properties": {
            "id": { "type": "string" },
            "referenceNumber": { "type": "string" },
            "type": {
              "enum": ["glassDamage", "generalDamage"],
              "type": "string"
            },
            "status": { "enum": ["open", "closed"], "type": "string" },
            "notes": { "type": "string" },
            "createdAt": { "format": "date-time", "type": "string" },
            "createdById": { "type": "string" },
            "createdBy": { "$ref": "#/components/schemas/User" },
            "submittedAt": { "format": "date-time", "type": "string" },
            "updatedAt": { "format": "date-time", "type": "string" },
            "garageBranch": { "$ref": "#/components/schemas/GarageBranch" },
            "garageBranchId": { "type": "string" },
            "insuranceBranch": {
              "nullable": true,
              "allOf": [{ "$ref": "#/components/schemas/InsuranceBranch" }]
            },
            "insuranceBranchId": { "type": "string", "nullable": true },
            "insuranceReview": { "$ref": "#/components/schemas/InsuranceReview" },
            "quotations": {
              "type": "array",
              "items": { "$ref": "#/components/schemas/Quotation" }
            },
            "informationRequests": {
              "type": "array",
              "items": { "$ref": "#/components/schemas/InformationRequest" }
            },
            "kvas": {
              "type": "array",
              "items": { "$ref": "#/components/schemas/Kva" }
            },
            "defaultInformationRequest": {
              "$ref": "#/components/schemas/InformationRequest"
            },
            "defaultInformationRequestId": { "type": "string" },
            "insuranceHandlers": {
              "type": "array",
              "items": { "$ref": "#/components/schemas/InsuranceUser" }
            },
            "thirdPartyCase": { "$ref": "#/components/schemas/ThirdPartyCase" },
            "quotationCalculatedNumTimes": { "type": "number" }
          },
          "required": [
            "id",
            "referenceNumber",
            "status",
            "notes",
            "createdAt",
            "updatedAt",
            "garageBranch",
            "garageBranchId",
            "insuranceBranch",
            "insuranceBranchId",
            "quotations",
            "informationRequests",
            "kvas",
            "defaultInformationRequest",
            "defaultInformationRequestId",
            "insuranceHandlers",
            "quotationCalculatedNumTimes"
          ]
        },
        "User": {
          "type": "object",
          "properties": {
            "id": { "type": "string" },
            "externalId": { "type": "string" },
            "firstName": { "type": "string" },
            "lastName": { "type": "string" },
            "email": { "type": "string" },
            "type": { "type": "object" },
            "cases": {
              "type": "array",
              "items": { "$ref": "#/components/schemas/Case" }
            }
          },
          "required": [
            "id",
            "externalId",
            "firstName",
            "lastName",
            "email",
            "type",
            "cases"
          ]
        },
        "NoicomUpdateCaseDto": {
          "type": "object",
          "properties": {
            "type": { "$ref": "#/components/schemas/CaseType" },
            "informationRequestType": {
              "type": "object",
              "enum": [
                "GaragePictureDocumentation",
                "GarageFullGlassDocumentation",
                "GarageFullDocumentationRequest",
                "GaragePictureDocumentationRequest",
                "AxaFranceEndUserDocumentation",
                "AutoidatPictureDocumentation",
                "AutoidatFullGlassDocumentation",
                "EndUserPictureDocumentationRequest",
                "ExpertPictureDocumentation",
                "C2CGaragePictureDocumentation",
                "C2CEndCustomerPictureDocumentation"
              ]
            }
          }
        },
        "UserLocale": { "type": "string", "enum": ["en", "de", "it", "fr"] },
        "NoicomInformationRequestDataDto": {
          "type": "object",
          "properties": {
            "licensePlate": { "type": "string" },
            "make": { "type": "string" },
            "model": { "type": "string" },
            "vin": { "type": "string", "minLength": 17, "maxLength": 17 },
            "modelVersion": { "type": "string" },
            "vehicleOwner": { "type": "string" },
            "requestKva": { "type": "boolean" },
            "language": { "$ref": "#/components/schemas/UserLocale" },
            "requestOtherDocuments": { "type": "string" },
            "garageName": { "type": "string" },
            "emailTo": { "type": "string" }
          }
        },
        "NoicomInformationRequest": {
          "type": "object",
          "properties": {
            "id": { "type": "string" },
            "refId": { "type": "string" },
            "caseId": { "type": "string" },
            "data": {
              "$ref": "#/components/schemas/NoicomInformationRequestDataDto"
            },
            "licensePlate": { "type": "string" },
            "make": { "type": "string" },
            "model": { "type": "string" },
            "vin": { "type": "string", "minLength": 17, "maxLength": 17 },
            "modelVersion": { "type": "string" }
          },
          "required": ["id"]
        },
        "NoicomUpdateInformationRequestDto": {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/components/schemas/NoicomInformationRequestDataDto"
            },
            "licensePlate": { "type": "string" },
            "make": { "type": "string" },
            "model": { "type": "string" },
            "vin": { "type": "string", "minLength": 17, "maxLength": 17 },
            "modelVersion": { "type": "string" }
          }
        },
        "NoicomSetInsurancePostDto": {
          "type": "object",
          "properties": { "insuranceId": { "type": "string" } }
        },
        "NoicomAttachmentDataDto": {
          "type": "object",
          "properties": {
            "imageWidth": { "type": "number" },
            "imageHeight": { "type": "number" }
          }
        },
        "NoicomCreateAttachmentDto": {
          "type": "object",
          "properties": {
            "type": { "type": "string" },
            "content": { "type": "string" },
            "attachmentData": {
              "$ref": "#/components/schemas/NoicomAttachmentDataDto"
            }
          },
          "required": ["type", "content", "attachmentData"]
        },
        "GarageLabelDataGeometryDto": {
          "type": "object",
          "properties": {
            "type": { "type": "object" },
            "coordinates": { "type": "object" }
          },
          "required": ["type", "coordinates"]
        },
        "GarageLabelDto": {
          "type": "object",
          "properties": {
            "id": { "type": "string" },
            "type": { "type": "string" },
            "geometry": {
              "$ref": "#/components/schemas/GarageLabelDataGeometryDto"
            },
            "damageType": { "type": "string" },
            "color": { "type": "string" }
          },
          "required": ["id", "type", "geometry", "damageType", "color"]
        },
        "NoicomAttachmentDto": {
          "type": "object",
          "properties": {
            "id": { "type": "string" },
            "type": { "type": "string" },
            "content": { "type": "string" },
            "src": { "type": "string" },
            "attachmentData": {
              "$ref": "#/components/schemas/NoicomAttachmentDataDto"
            },
            "createdAt": { "format": "date-time", "type": "string" },
            "fileName": { "type": "string" },
            "labels": {
              "type": "array",
              "items": { "$ref": "#/components/schemas/GarageLabelDto" }
            }
          },
          "required": [
            "id",
            "type",
            "content",
            "src",
            "attachmentData",
            "createdAt"
          ]
        },
        "NoicomModelDto": {
          "type": "object",
          "properties": {
            "licensePlate": { "type": "string" },
            "vin": { "type": "string" }
          },
          "required": ["licensePlate", "vin"]
        },
        "NoicomLabelDataDto": {
          "type": "object",
          "properties": {
            "damageType": { "type": "string" },
            "color": { "type": "string" }
          }
        },
        "NoicomCreateLabelDto": {
          "type": "object",
          "properties": {
            "labelData": { "$ref": "#/components/schemas/NoicomLabelDataDto" }
          },
          "required": ["labelData"]
        },
        "NoicomLabelDto": {
          "type": "object",
          "properties": {
            "id": { "type": "string" },
            "labelData": { "$ref": "#/components/schemas/NoicomLabelDataDto" },
            "createdAt": { "format": "date-time", "type": "string" }
          },
          "required": ["id", "labelData", "createdAt"]
        },
        "NoicomLabelDataGeometryDto": {
          "type": "object",
          "properties": {
            "type": {
              "type": "object",
              "enum": ["BoundingBox", "Polygon", "Point", "GlassPoint"],
              "description": "Valid values: 'BoundingBox', 'Polygon', 'Point', 'GlassPoint'"
            },
            "coordinates": { "type": "array", "items": { "type": "object" } }
          },
          "required": ["type", "coordinates"]
        },
        "NoicomLabelDataPropertiesDto": {
          "type": "object",
          "properties": {
            "color": { "type": "string" },
            "labelId": { "type": "string" },
            "userGenerated": { "type": "boolean" }
          },
          "required": ["color", "labelId", "userGenerated"]
        },
        "NoicomAttachmentToLabelDataDto": {
          "type": "object",
          "properties": {
            "geometry": {
              "$ref": "#/components/schemas/NoicomLabelDataGeometryDto"
            },
            "properties": {
              "$ref": "#/components/schemas/NoicomLabelDataPropertiesDto"
            },
            "type": { "type": "string", "example": "GeometryLabel" }
          },
          "required": ["geometry", "properties", "type"]
        },
        "NoicomCreateAttachmentToLabelDto": {
          "type": "object",
          "properties": {
            "attachmentToLabelData": {
              "$ref": "#/components/schemas/NoicomAttachmentToLabelDataDto"
            }
          },
          "required": ["attachmentToLabelData"]
        },
        "NoicomShareDataDto": {
          "type": "object",
          "properties": {
            "sharedWithEmail": { "type": "string" },
            "sharedWithPhone": { "type": "string" },
            "selectedLanguage": {
              "type": "object",
              "enum": ["en", "de", "it", "fr"]
            }
          }
        },
        "NoicomRequestShareDataDto": {
          "type": "object",
          "properties": {
            "urlData": { "$ref": "#/components/schemas/NoicomShareDataDto" }
          },
          "required": ["urlData"]
        },
        "NoicomCaseSubmitDto": {
          "type": "object",
          "properties": { "language": { "type": "object" } },
          "required": ["language"]
        },
        "UserDto": {
          "type": "object",
          "properties": {
            "firstName": { "type": "string" },
            "lastName": { "type": "string" },
            "rootBranchId": { "type": "string" }
          },
          "required": ["firstName", "lastName", "rootBranchId"]
        },
        "NoicomInsuranceGetDto": {
          "type": "object",
          "properties": {
            "id": { "type": "string" },
            "tenantId": {
              "type": "string",
              "description": "Tenant ID of the insurance coming from the GCP/Firebase project"
            },
            "name": { "type": "string" },
            "logoUrl": { "type": "string" }
          },
          "required": ["id", "tenantId", "name", "logoUrl"]
        },
        "GarageCreateQuotationDto": {
          "type": "object",
          "properties": {
            "vin": { "type": "string", "minLength": 17, "pattern": "vinRegex" },
            "licensePlate": {
              "type": "string",
              "minLength": 3,
              "maxLength": 8,
              "pattern": "licensePlateRegex"
            },
            "actionType": {
              "type": "string",
              "enum": ["glassRepair", "glassReplace"],
              "example": "glassRepair"
            },
            "language": {
              "type": "object",
              "enum": ["DE", "FR"],
              "example": "FR"
            }
          },
          "required": ["actionType", "language"]
        },
        "QuotationVehicleDto": {
          "type": "object",
          "properties": {
            "vin": {
              "type": "string",
              "minLength": 17,
              "pattern": "vinRegex",
              "maxLength": 17
            },
            "licensePlate": {
              "type": "string",
              "minLength": 3,
              "maxLength": 8,
              "pattern": "licensePlateRegex"
            },
            "make": { "type": "string" },
            "model": { "type": "string" },
            "type": { "type": "string" }
          },
          "required": ["make", "model", "type"]
        },
        "QuotationItemDto": {
          "type": "object",
          "properties": {
            "name": { "type": "string" },
            "type": { "type": "string", "enum": ["material", "labour"] },
            "unit": { "type": "string", "enum": ["EUR", "CHF", "h"] },
            "quantity": { "type": "number" },
            "price": { "type": "number" },
            "more": {
              "type": "array",
              "items": {
                "required": false,
                "type": "array",
                "items": { "type": "string" }
              }
            }
          },
          "required": ["name", "type", "unit", "quantity", "price", "more"]
        },
        "QuotationTotalDto": {
          "type": "object",
          "properties": {
            "currency": { "type": "string", "enum": ["EUR", "CHF"] },
            "material": { "type": "number" },
            "labour": { "type": "number" },
            "amount": { "type": "number" },
            "materialDiscountPercentage": { "type": "number" },
            "labourDiscountPercentage": { "type": "number" },
            "materialDiscountValue": { "type": "number" },
            "labourDiscountValue": { "type": "number" },
            "discountedAmount": { "type": "number" },
            "taxRate": { "type": "number", "minimum": 0, "maximum": 100 },
            "tax": { "type": "number" },
            "amountWithTax": { "type": "number" }
          },
          "required": [
            "currency",
            "material",
            "labour",
            "amount",
            "taxRate",
            "tax",
            "amountWithTax"
          ]
        },
        "GarageQuotationDto": {
          "type": "object",
          "properties": {
            "id": { "type": "string", "minLength": 21, "maxLength": 21 },
            "vehicle": { "$ref": "#/components/schemas/QuotationVehicleDto" },
            "items": {
              "type": "array",
              "items": { "$ref": "#/components/schemas/QuotationItemDto" }
            },
            "total": { "$ref": "#/components/schemas/QuotationTotalDto" },
            "provider": {
              "type": "object",
              "enum": ["gtmotive", "audatex", "default"]
            }
          },
          "required": ["id", "vehicle", "items", "total", "provider"]
        },
        "LicensePlate": { "type": "object", "properties": {} },
        "VIN": { "type": "object", "properties": {} },
        "GarageAction": { "type": "string", "enum": ["replace", "repair"] },
        "GarageInformationRequestDataDto": {
          "type": "object",
          "properties": {
            "licensePlate": { "$ref": "#/components/schemas/LicensePlate" },
            "make": { "type": "string" },
            "model": { "type": "string" },
            "vin": {
              "minLength": 17,
              "maxLength": 17,
              "allOf": [{ "$ref": "#/components/schemas/VIN" }]
            },
            "carType": { "type": "string" },
            "garageAction": { "$ref": "#/components/schemas/GarageAction" },
            "replaceReason": { "type": "string" },
            "pledgeOfHonesty": { "type": "boolean" },
            "costEstimationId": { "type": "string" },
            "costEstimationAccepted": { "type": "boolean" },
            "costEstimationRejectionReason": { "type": "string" },
            "vehicleOwner": { "type": "string" },
            "garageStatedKvaSum": { "type": "number" }
          }
        },
        "GarageAttachmentDataDto": { "type": "object", "properties": {} },
        "GarageAttachmentDto": {
          "type": "object",
          "properties": {
            "id": { "type": "string" },
            "type": { "type": "string" },
            "content": { "type": "string" },
            "src": { "type": "string" },
            "attachmentData": {
              "$ref": "#/components/schemas/GarageAttachmentDataDto"
            },
            "createdAt": { "format": "date-time", "type": "string" },
            "labels": {
              "type": "array",
              "items": { "$ref": "#/components/schemas/GarageLabelDto" }
            }
          },
          "required": [
            "id",
            "type",
            "content",
            "src",
            "attachmentData",
            "createdAt"
          ]
        },
        "GarageInformationRequestDto": {
          "type": "object",
          "properties": {
            "refId": { "type": "string" },
            "caseId": { "type": "string" },
            "case": {
              "type": "object",
              "properties": {
                "referenceNumber": { "required": true, "type": "string" }
              }
            },
            "data": {
              "$ref": "#/components/schemas/GarageInformationRequestDataDto"
            },
            "attachments": {
              "type": "array",
              "items": { "$ref": "#/components/schemas/GarageAttachmentDto" }
            },
            "noiportalSubmittedAt": { "format": "date-time", "type": "string" },
            "noicomSubmittedAt": { "format": "date-time", "type": "string" },
            "id": { "type": "string" },
            "licensePlate": { "type": "string" },
            "make": { "type": "string" },
            "model": { "type": "string" },
            "vin": { "type": "string", "minLength": 17, "maxLength": 17 },
            "modelVersion": { "type": "string" }
          },
          "required": ["case", "id"]
        },
        "GarageCaseDto": {
          "type": "object",
          "properties": {
            "id": { "type": "string" },
            "referenceNumber": {
              "type": "string",
              "minLength": 7,
              "maxLength": 7
            },
            "type": { "$ref": "#/components/schemas/CaseType" },
            "createdAt": { "format": "date-time", "type": "string" },
            "updatedAt": { "format": "date-time", "type": "string" },
            "submittedAt": {
              "format": "date-time",
              "type": "string",
              "nullable": true
            },
            "defaultInformationRequestId": { "type": "string" },
            "informationRequests": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/GarageInformationRequestDto"
              }
            }
          },
          "required": [
            "createdAt",
            "updatedAt",
            "submittedAt",
            "defaultInformationRequestId",
            "informationRequests"
          ]
        },
        "GarageCreateCaseDto": {
          "type": "object",
          "properties": {
            "type": { "$ref": "#/components/schemas/CaseType" },
            "informationRequestType": {
              "type": "object",
              "enum": [
                "GaragePictureDocumentation",
                "GarageFullGlassDocumentation",
                "GarageFullDocumentationRequest",
                "GaragePictureDocumentationRequest",
                "AxaFranceEndUserDocumentation",
                "AutoidatPictureDocumentation",
                "AutoidatFullGlassDocumentation",
                "EndUserPictureDocumentationRequest",
                "ExpertPictureDocumentation",
                "C2CGaragePictureDocumentation",
                "C2CEndCustomerPictureDocumentation"
              ]
            }
          },
          "required": ["type", "informationRequestType"]
        },
        "GarageUpdateCaseDto": {
          "type": "object",
          "properties": {
            "type": { "$ref": "#/components/schemas/CaseType" },
            "informationRequestType": {
              "type": "object",
              "enum": [
                "GaragePictureDocumentation",
                "GarageFullGlassDocumentation",
                "GarageFullDocumentationRequest",
                "GaragePictureDocumentationRequest",
                "AxaFranceEndUserDocumentation",
                "AutoidatPictureDocumentation",
                "AutoidatFullGlassDocumentation",
                "EndUserPictureDocumentationRequest",
                "ExpertPictureDocumentation",
                "C2CGaragePictureDocumentation",
                "C2CEndCustomerPictureDocumentation"
              ]
            },
            "submittedAt": { "type": "string" }
          }
        },
        "GarageGreyCardDataExtractionResponseDto": {
          "type": "object",
          "properties": {
            "licensePlate": {
              "type": "string",
              "minLength": 3,
              "maxLength": 8,
              "pattern": "licensePlateRegex"
            },
            "vin": {
              "type": "string",
              "minLength": 17,
              "pattern": "vinRegex",
              "maxLength": 17
            }
          },
          "required": ["licensePlate", "vin"]
        },
        "GarageCreateLabelDto": {
          "type": "object",
          "properties": {
            "geometry": {
              "$ref": "#/components/schemas/GarageLabelDataGeometryDto"
            },
            "damageType": { "type": "string" },
            "color": { "type": "string" }
          },
          "required": ["geometry", "damageType", "color"]
        },
        "GarageCreateAttachmentDto": {
          "type": "object",
          "properties": {
            "type": { "type": "string" },
            "content": { "type": "string" },
            "labels": {
              "type": "array",
              "items": { "$ref": "#/components/schemas/GarageCreateLabelDto" }
            }
          },
          "required": ["type", "content"]
        },
        "GarageUpdateLabelDto": {
          "type": "object",
          "properties": { "geometry": { "type": "object" } },
          "required": ["geometry"]
        },
        "GarageUpdateInformationRequestDto": {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/components/schemas/GarageInformationRequestDataDto"
            },
            "licensePlate": { "type": "string" },
            "make": { "type": "string" },
            "model": { "type": "string" },
            "vin": { "type": "string", "minLength": 17, "maxLength": 17 },
            "modelVersion": { "type": "string" }
          }
        },
        "InformationRequestDashboardCaseCreatorDto": {
          "type": "object",
          "properties": {
            "firstName": { "type": "string" },
            "lastName": { "type": "string" },
            "email": { "type": "string" },
            "type": {
              "type": "string",
              "enum": ["AdminUser", "GarageUser", "InsuranceUser"]
            }
          }
        },
        "InformationRequestDashboardDto": {
          "type": "object",
          "properties": {
            "id": { "type": "string" },
            "licensePlate": { "type": "string" },
            "caseCreator": {
              "$ref": "#/components/schemas/InformationRequestDashboardCaseCreatorDto"
            },
            "make": { "type": "string" },
            "model": { "type": "string" },
            "modelVersion": { "type": "string" },
            "state": {
              "type": "string",
              "enum": [
                "new",
                "open_by_user",
                "in_progress_noicom",
                "in_progress_noiportal",
                "photo_taking_finished",
                "done",
                "mixed_flow_selected",
                "portal_only_flow_selected",
                "in_progress"
              ]
            }
          },
          "required": ["id", "state"]
        },
        "InsuranceCreateCaseDto": {
          "type": "object",
          "properties": {
            "type": { "$ref": "#/components/schemas/CaseType" },
            "informationRequestType": {
              "type": "object",
              "enum": [
                "GaragePictureDocumentation",
                "GarageFullGlassDocumentation",
                "GarageFullDocumentationRequest",
                "GaragePictureDocumentationRequest",
                "AxaFranceEndUserDocumentation",
                "AutoidatPictureDocumentation",
                "AutoidatFullGlassDocumentation",
                "EndUserPictureDocumentationRequest",
                "ExpertPictureDocumentation",
                "C2CGaragePictureDocumentation",
                "C2CEndCustomerPictureDocumentation"
              ]
            }
          },
          "required": ["type"]
        },
        "InsuranceInformationRequestDataDto": {
          "type": "object",
          "properties": {
            "licensePlate": { "type": "string" },
            "make": { "type": "string" },
            "model": { "type": "string" },
            "vin": { "type": "string", "minLength": 17, "maxLength": 17 },
            "carType": { "type": "string" },
            "garageAction": { "$ref": "#/components/schemas/GarageAction" },
            "replaceReason": { "type": "string" },
            "pledgeOfHonesty": { "type": "boolean" },
            "costEstimationId": { "type": "string" },
            "costEstimationAccepted": { "type": "boolean" },
            "costEstimationRejectionReason": { "type": "string" },
            "vehicleOwner": { "type": "string" },
            "requestKva": { "type": "boolean" },
            "language": { "$ref": "#/components/schemas/UserLocale" },
            "requestOtherDocuments": { "type": "string" },
            "garageName": { "type": "string" },
            "refId": { "type": "string" },
            "emailTo": { "type": "string" },
            "phoneNumberTo": { "type": "string" },
            "templateId": { "type": "string" }
          }
        },
        "InsuranceAttachmentDataDto": {
          "type": "object",
          "properties": {
            "imageWidth": { "type": "number" },
            "imageHeight": { "type": "number" }
          }
        },
        "InsuranceLabelDataGeometryDto": {
          "type": "object",
          "properties": {
            "type": { "type": "object" },
            "coordinates": { "type": "object" }
          },
          "required": ["type", "coordinates"]
        },
        "InsuranceLabelDto": {
          "type": "object",
          "properties": {
            "id": { "type": "string" },
            "type": { "type": "string" },
            "geometry": {
              "$ref": "#/components/schemas/InsuranceLabelDataGeometryDto"
            },
            "damageType": { "type": "string" },
            "color": { "type": "string" }
          },
          "required": ["id", "type", "geometry", "damageType", "color"]
        },
        "InsuranceAttachmentDto": {
          "type": "object",
          "properties": {
            "id": { "type": "string" },
            "type": { "type": "string" },
            "content": { "type": "string" },
            "src": { "type": "string" },
            "attachmentData": {
              "$ref": "#/components/schemas/InsuranceAttachmentDataDto"
            },
            "createdAt": { "format": "date-time", "type": "string" },
            "labels": { "$ref": "#/components/schemas/InsuranceLabelDto" },
            "fileName": { "type": "string" }
          },
          "required": [
            "id",
            "type",
            "content",
            "src",
            "attachmentData",
            "createdAt"
          ]
        },
        "InformationRequestStatus": {
          "type": "string",
          "enum": ["waiting", "expired", "completed"]
        },
        "InsuranceInformationRequestDto": {
          "type": "object",
          "properties": {
            "licensePlate": { "type": "string" },
            "modelVersion": { "type": "string" },
            "model": { "type": "string" },
            "make": { "type": "string" },
            "vin": { "type": "string" },
            "id": { "type": "string" },
            "validUntil": { "format": "date-time", "type": "string" },
            "createdAt": { "format": "date-time", "type": "string" },
            "updatedAt": { "format": "date-time", "type": "string" },
            "refId": { "type": "string" },
            "caseId": { "type": "string" },
            "data": {
              "$ref": "#/components/schemas/InsuranceInformationRequestDataDto"
            },
            "attachments": {
              "type": "array",
              "items": { "$ref": "#/components/schemas/InsuranceAttachmentDto" }
            },
            "type": { "type": "string" },
            "status": { "$ref": "#/components/schemas/InformationRequestStatus" },
            "documentationFormComment": { "type": "string" },
            "picturesUploaded": { "type": "boolean" },
            "kvaUploaded": { "type": "boolean" },
            "documentsUploaded": { "type": "boolean" }
          },
          "required": [
            "vin",
            "id",
            "validUntil",
            "createdAt",
            "updatedAt",
            "caseId",
            "status",
            "picturesUploaded",
            "kvaUploaded",
            "documentsUploaded"
          ]
        },
        "InsuranceReviewDto": {
          "type": "object",
          "properties": {
            "id": { "type": "string", "minLength": 21, "maxLength": 21 },
            "caseId": { "type": "string", "minLength": 21, "maxLength": 21 },
            "goodImageQuality": { "type": "boolean" },
            "labelsAccurate": { "type": "boolean" },
            "repairActionAccurate": { "type": "boolean" },
            "validInvoiceRange": { "type": "boolean" },
            "validCostEstimation": { "type": "boolean" }
          },
          "required": [
            "id",
            "caseId",
            "goodImageQuality",
            "labelsAccurate",
            "repairActionAccurate",
            "validInvoiceRange",
            "validCostEstimation"
          ]
        },
        "InsuranceCaseDto": {
          "type": "object",
          "properties": {
            "id": { "type": "string" },
            "referenceNumber": {
              "type": "string",
              "minLength": 7,
              "maxLength": 7
            },
            "type": { "$ref": "#/components/schemas/CaseType" },
            "createdByFullName": { "type": "string" },
            "status": { "enum": ["open", "closed"], "type": "string" },
            "garageName": { "type": "string" },
            "insuranceBranchId": { "type": "string" },
            "notes": { "type": "string" },
            "createdAt": { "format": "date-time", "type": "string" },
            "submittedAt": {
              "format": "date-time",
              "type": "string",
              "nullable": true
            },
            "defaultInformationRequestId": { "type": "string" },
            "informationRequests": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/InsuranceInformationRequestDto"
              }
            },
            "review": {
              "nullable": true,
              "allOf": [{ "$ref": "#/components/schemas/InsuranceReviewDto" }]
            }
          },
          "required": [
            "id",
            "referenceNumber",
            "type",
            "createdByFullName",
            "status",
            "garageName",
            "insuranceBranchId",
            "notes",
            "createdAt",
            "submittedAt",
            "defaultInformationRequestId",
            "informationRequests",
            "review"
          ]
        },
        "CaseStatus": { "type": "string", "enum": ["open", "closed"] },
        "InsuranceUpdateCaseDto": {
          "type": "object",
          "properties": {
            "type": { "$ref": "#/components/schemas/CaseType" },
            "informationRequestType": {
              "type": "object",
              "enum": [
                "GaragePictureDocumentation",
                "GarageFullGlassDocumentation",
                "GarageFullDocumentationRequest",
                "GaragePictureDocumentationRequest",
                "AxaFranceEndUserDocumentation",
                "AutoidatPictureDocumentation",
                "AutoidatFullGlassDocumentation",
                "EndUserPictureDocumentationRequest",
                "ExpertPictureDocumentation",
                "C2CGaragePictureDocumentation",
                "C2CEndCustomerPictureDocumentation"
              ]
            },
            "status": { "$ref": "#/components/schemas/CaseStatus" },
            "notes": { "type": "string" },
            "referenceNumber": { "type": "string" },
            "submittedAt": { "type": "string" }
          }
        },
        "InsuranceCreateOrUpdateReviewDto": {
          "type": "object",
          "properties": {
            "goodImageQuality": { "type": "boolean" },
            "labelsAccurate": { "type": "boolean" },
            "repairActionAccurate": { "type": "boolean" },
            "validInvoiceRange": { "type": "boolean" },
            "validCostEstimation": { "type": "boolean" }
          },
          "required": [
            "goodImageQuality",
            "labelsAccurate",
            "repairActionAccurate",
            "validInvoiceRange",
            "validCostEstimation"
          ]
        },
        "InsuranceGarageDto": {
          "type": "object",
          "properties": {
            "id": { "type": "string" },
            "name": { "type": "string" }
          },
          "required": ["id", "name"]
        },
        "InsuranceQuotationDto": {
          "type": "object",
          "properties": {
            "id": { "type": "string", "minLength": 21 },
            "vehicle": { "$ref": "#/components/schemas/QuotationVehicleDto" },
            "items": {
              "type": "array",
              "items": { "$ref": "#/components/schemas/QuotationItemDto" }
            },
            "total": { "$ref": "#/components/schemas/QuotationTotalDto" },
            "provider": {
              "type": "object",
              "enum": ["gtmotive", "audatex", "default"]
            }
          },
          "required": ["id", "vehicle", "items", "total", "provider"]
        },
        "IrMessageTemplateType": {
          "type": "string",
          "enum": [
            "informationRequestGeneralDamage",
            "informationRequestShareSms",
            "axaFranceDefaultSms"
          ]
        },
        "InsuranceEmailInputsDto": {
          "type": "object",
          "properties": {
            "emails": {
              "type": "array",
              "items": {
                "required": true,
                "type": "array",
                "items": { "type": "string" }
              }
            },
            "vehicleLicensePlate": { "type": "string" },
            "vehicleOwnerName": { "type": "string" },
            "claimNumber": { "type": "string" },
            "vehicleType": { "type": "string" },
            "garageName": { "type": "string" },
            "requestKva": { "type": "boolean" },
            "otherDocuments": { "type": "string" },
            "note": { "type": "string" }
          },
          "required": [
            "emails",
            "vehicleLicensePlate",
            "vehicleOwnerName",
            "claimNumber",
            "vehicleType",
            "garageName",
            "requestKva"
          ]
        },
        "InsurancePreviewEmailDto": {
          "type": "object",
          "properties": {
            "emailTemplateId": { "type": "string" },
            "language": { "$ref": "#/components/schemas/UserLocale" },
            "inputs": { "$ref": "#/components/schemas/InsuranceEmailInputsDto" }
          },
          "required": ["emailTemplateId", "language", "inputs"]
        },
        "InsuranceSendEmailDto": {
          "type": "object",
          "properties": {
            "emailTemplateId": { "type": "string" },
            "language": { "$ref": "#/components/schemas/UserLocale" },
            "inputs": { "$ref": "#/components/schemas/InsuranceEmailInputsDto" }
          },
          "required": ["emailTemplateId", "language", "inputs"]
        },
        "InsurancePreviewSmsDto": {
          "type": "object",
          "properties": {
            "smsTemplateId": { "type": "string" },
            "language": { "$ref": "#/components/schemas/UserLocale" },
            "inputs": { "$ref": "#/components/schemas/InsuranceEmailInputsDto" }
          },
          "required": ["smsTemplateId", "language", "inputs"]
        },
        "InsuranceSmsInputsDto": {
          "type": "object",
          "properties": {
            "phoneNumber": { "type": "string" },
            "claimNumber": { "type": "string" },
            "licensePlate": { "type": "string" }
          },
          "required": ["phoneNumber", "claimNumber", "licensePlate"]
        },
        "InsuranceSendSmsDto": {
          "type": "object",
          "properties": {
            "smsTemplateId": { "type": "string" },
            "language": { "$ref": "#/components/schemas/UserLocale" },
            "inputs": { "$ref": "#/components/schemas/InsuranceSmsInputsDto" }
          },
          "required": ["smsTemplateId", "language", "inputs"]
        },
        "AnonymousLabelDataDto": {
          "type": "object",
          "properties": {
            "damageType": { "type": "string" },
            "color": { "type": "string" }
          },
          "required": ["damageType", "color"]
        },
        "AnonymousLabelDto": {
          "type": "object",
          "properties": {
            "id": { "type": "string" },
            "labelData": { "$ref": "#/components/schemas/AnonymousLabelDataDto" },
            "index": { "type": "number" }
          },
          "required": ["id", "labelData", "index"]
        },
        "InsurancePreviewSmsInputsDto": {
          "type": "object",
          "properties": {
            "recipientName": { "type": "string" },
            "claimNumber": { "type": "string" },
            "licensePlate": { "type": "string" }
          }
        },
        "AnonymousAttachmentDto": {
          "type": "object",
          "properties": {
            "id": { "type": "string" },
            "type": { "type": "string" },
            "content": { "type": "string" },
            "src": { "type": "string" },
            "labels": {
              "type": "array",
              "items": { "$ref": "#/components/schemas/GarageLabelDto" }
            },
            "createdAt": { "format": "date-time", "type": "string" },
            "fileName": { "type": "string" },
            "attachmentData": {
              "$ref": "#/components/schemas/InsuranceAttachmentDataDto"
            }
          },
          "required": ["id", "type", "content", "createdAt", "attachmentData"]
        },
        "AnonymousInformationRequestDataDto": {
          "type": "object",
          "properties": {
            "vehicleOwner": { "type": "string" },
            "requestKva": { "type": "boolean" },
            "requestOtherDocuments": { "type": "string" },
            "replaceReason": { "type": "string" },
            "pledgeOfHonesty": { "type": "boolean" },
            "garageAction": { "$ref": "#/components/schemas/GarageAction" },
            "costEstimationId": {
              "type": "string",
              "minLength": 21,
              "maxLength": 21
            },
            "costEstimationAccepted": { "type": "boolean" },
            "costEstimationRejectionReason": { "type": "string" }
          }
        },
        "AnonymousUpdateInformationRequestDto": {
          "type": "object",
          "properties": {
            "documentationFormComment": { "type": "string" },
            "data": {
              "$ref": "#/components/schemas/AnonymousInformationRequestDataDto"
            },
            "licensePlate": { "type": "string" },
            "make": { "type": "string" },
            "model": { "type": "string" },
            "vin": { "type": "string", "minLength": 17, "maxLength": 17 },
            "modelVersion": { "type": "string" }
          }
        },
        "AnonymousInformationRequestDto": {
          "type": "object",
          "properties": {
            "id": { "type": "string" },
            "caseId": { "type": "string" },
            "type": { "type": "string" },
            "noicomSubmittedAt": { "format": "date-time", "type": "string" },
            "noiportalSubmittedAt": { "format": "date-time", "type": "string" },
            "data": {
              "$ref": "#/components/schemas/AnonymousInformationRequestDataDto"
            },
            "attachments": {
              "type": "array",
              "items": { "$ref": "#/components/schemas/AnonymousAttachmentDto" }
            },
            "refId": { "type": "string" },
            "status": { "$ref": "#/components/schemas/InformationRequestStatus" },
            "state": { "type": "object" },
            "licensePlate": { "type": "string" },
            "make": { "type": "string" },
            "model": { "type": "string" },
            "vin": { "type": "string", "minLength": 17, "maxLength": 17 },
            "modelVersion": { "type": "string" }
          },
          "required": ["id", "caseId", "type", "attachments", "status", "state"]
        },
        "NoiportalCaseSubmitDto": {
          "type": "object",
          "properties": { "language": { "type": "object" } }
        },
        "AnonymousCreateAttachmentDto": {
          "type": "object",
          "properties": {
            "type": { "type": "string" },
            "content": { "type": "string" },
            "fileName": { "type": "string" }
          },
          "required": ["type", "content"]
        },
        "AnonymousAttachmentToLabelDto": {
          "type": "object",
          "properties": {
            "id": { "type": "string" },
            "type": { "type": "string" },
            "geometry": {
              "$ref": "#/components/schemas/GarageLabelDataGeometryDto"
            },
            "color": { "type": "string" }
          },
          "required": ["id", "type", "geometry", "color"]
        },
        "CreateQuotationDto": {
          "type": "object",
          "properties": {
            "language": {
              "type": "object",
              "enum": ["DE", "FR", "EN"],
              "description": "Allowed values: DE, FR"
            },
            "labourRate": { "type": "number", "maximum": 280 }
          },
          "required": ["language", "labourRate"]
        },
        "AnonymousQuotationDto": {
          "type": "object",
          "properties": {
            "id": { "type": "string", "minLength": 21, "maxLength": 21 },
            "vehicle": { "$ref": "#/components/schemas/QuotationVehicleDto" },
            "items": {
              "type": "array",
              "items": { "$ref": "#/components/schemas/QuotationItemDto" }
            },
            "total": { "$ref": "#/components/schemas/QuotationTotalDto" },
            "provider": {
              "type": "object",
              "enum": ["gtmotive", "audatex", "default"]
            }
          },
          "required": ["id", "vehicle", "items", "total", "provider"]
        },
        "SelectFlowDto": {
          "type": "object",
          "properties": {
            "flow": {
              "type": "string",
              "enum": ["mixed_flow_selected", "portal_only_flow_selected"]
            }
          },
          "required": ["flow"]
        },
        "AnonymousKvaTypeDto": {
          "type": "object",
          "properties": { "isReplace": { "type": "boolean" } },
          "required": ["isReplace"]
        },
        "BranchDto": {
          "type": "object",
          "properties": {
            "id": { "type": "string" },
            "name": { "type": "string" }
          },
          "required": ["id", "name"]
        },
        "ProfileDto": {
          "type": "object",
          "properties": {
            "id": { "type": "string" },
            "firstName": { "type": "string" },
            "lastName": { "type": "string" },
            "branches": {
              "type": "array",
              "items": { "$ref": "#/components/schemas/BranchDto" }
            }
          },
          "required": ["id", "firstName", "lastName", "branches"]
        },
        "UpdateProfileDto": {
          "type": "object",
          "properties": {
            "firstName": { "type": "string", "minLength": 1, "maxLength": 25 },
            "lastName": { "type": "string", "minLength": 1, "maxLength": 25 }
          }
        },
        "PubSubMessageDto": {
          "type": "object",
          "properties": { "data": { "type": "string" } },
          "required": ["data"]
        },
        "PubSubDto": {
          "type": "object",
          "properties": {
            "message": { "$ref": "#/components/schemas/PubSubMessageDto" }
          },
          "required": ["message"]
        }
      }
    }
  }
contentType: yaml
